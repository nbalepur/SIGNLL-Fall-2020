{"version":3,"sources":["components/header.js","components/footer.js","images/intro.png","images/regression.png","images/sentiment.png","images/neuralnet.png","images/chatbotp1.png","images/chatbotp2.png","images/summary.png","images/trie.png","images/naivebayes.png","components/projects.js","images/logo.png","pages/home.js","components/tabs.js","components/badges.js","components/subheader.js","components/notebook.js","components/slides.js","pages/intro.js","pages/regression.js","pages/sentiment.js","pages/neural_network.js","pages/chatbot_p1.js","pages/chatbot_p2.js","pages/summarization.js","pages/tries.js","pages/naive_bayes.js","App.js","reportWebVitals.js","index.js"],"names":["Header","state","pages","page_map","Home","Tries","curr_page","page_num","push","to","data-toggle","data-target","class","href","style","color","props","page","onClick","setPage","this","length","type","aria-controls","aria-expanded","aria-label","id","createListItems","Component","Footer","className","target","Projects","showDescriptions","Container","setState","for","data-ride","src","Intro","alt","Regression","Sentiment","NeuralNetwork","Chatbot1","Chatbot2","Summary","Trie","NaiveBayes","role","data-slide","aria-hidden","window","scrollTo","Logo","width","height","Tab","curr_tab","tabs","name","tab_items","tab_index","concat","eventKey","title","component","Tabs","defaultActiveKey","activeKey","onSelect","key","createTabs","Badges","badge_obj","badges","badge_num","obj","badge_id","label","createBadges","Subheader","titleKey","subtitle","Notebook","innerWidth","innerHeight","horizontal_offset","vertical_offset","notebook_type","updateDimensions","updateOffset","addEventListener","removeEventListener","element","document","getElementById","bodyRect","body","getBoundingClientRect","elemRect","right","top","allowSwitch","checked","onlabel","offlabel","onChange","active","next","download","notebooks","frameborder","scrolling","Slides","source","allowfullscreen","mozallowfullscreen","webkitallowfullscreen","blank","filled","ChatbotPart1","ChatbotPart2","Summarization","App","exact","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"0PAuGeA,G,kNAjGbC,MAAQ,CACNC,MAAO,CACL,OACA,4BACA,iCACA,qBACA,kBACA,iBACA,iBACA,qBACA,QACA,eAEFC,SAAU,CACRC,KAAM,qBACN,4BAA6B,0BAC7B,iCAAkC,+BAClC,qBAAsB,uCACtB,kBAAmB,oCACnB,iBAAkB,+BAClB,iBAAkB,+BAClB,qBAAsB,uCACtBC,MAAO,0BACP,cAAe,kC,gEAYjB,IALiB,IAAD,OAEZH,EAAQ,GAFI,aAOd,IAAMI,EAAY,EAAKL,MAAMC,MAAMK,GAGnCL,EAAMM,KACJ,6BACE,cAAC,IAAD,CACEC,GAAI,EAAKR,MAAME,SAASG,GACxBI,cAAY,WACZC,cAAY,+BAHd,SAKE,mBAAGC,MAAM,aAAaC,KAAM,EAAKZ,MAAME,SAASG,GAAhD,SACE,sBACEQ,MAAO,CACLC,MAAO,EAAKC,MAAMC,OAASX,EAAY,UAAY,SAErDY,QAAS,WACP,EAAKF,MAAMG,QAAQb,IALvB,SAQGA,SAfA,EAAKL,MAAME,SAASG,MANxBC,EAAW,EAAGA,EAAWa,KAAKnB,MAAMC,MAAMmB,OAAQd,IAAa,IA8BxE,OAAOL,I,+BAIP,OACE,sBAAKU,MAAM,UAAX,UACE,sBAAKA,MAAM,qCAAX,UACE,qBAAIA,MAAM,aAAV,yBACe,IACb,sBAAME,MAAO,CAAEC,MAAO,WAAtB,SAAoCK,KAAKJ,MAAMC,UAEjD,wBACEL,MAAM,iBACNU,KAAK,SACLZ,cAAY,WACZC,cAAY,+BACZY,gBAAc,8BACdC,gBAAc,QACdC,aAAW,oBACXC,GAAG,gBARL,SAUE,sBAAMd,MAAM,6BAGhB,qBAAKA,MAAM,WAAWc,GAAG,8BAAzB,SACE,qBAAKd,MAAM,cAAX,SAA0BQ,KAAKO,6B,GA3FpBC,cCqCNC,E,4MAvCb5B,MAAQ,G,uDAEN,OACE,qBAAK6B,UAAU,eAAf,SACE,qBAAKlB,MAAM,8CAAX,SACE,qBAAKA,MAAM,wDAAX,SACE,qBAAIA,MAAM,qBAAV,UACE,mBACEA,MAAM,aACNC,KAAK,+BACLkB,OAAO,QAHT,mBAOA,qDACA,mBACEnB,MAAM,aACNC,KAAK,yDACLkB,OAAO,QAHT,sBAOA,qDACA,mBACEnB,MAAM,aACNC,KAAK,8BACLkB,OAAO,QAHT,oBAOA,kE,GA/BOH,a,QCFN,MAA0B,kCCA1B,MAA0B,uCCA1B,MAA0B,sCCA1B,MAA0B,sCCA1B,MAA0B,sCCA1B,MAA0B,sCCA1B,MAA0B,oCCA1B,MAA0B,iCCA1B,MAA0B,uCC+U1BI,E,4MA/Tb/B,MAAQ,CACNgC,kBAAkB,G,uDAGV,IAAD,OACP,OACE,eAACC,EAAA,EAAD,WACE,sBAAKR,GAAG,eAAed,MAAM,MAA7B,UACE,qBAAKA,MAAM,cACX,qBAAKA,MAAM,WAAX,SACE,sBAAKA,MAAM,iCAAX,UACE,uBACEU,KAAK,WACLV,MAAM,uBACNc,GAAG,cACHR,QAAS,WACP,EAAKiB,SAAS,CACZF,kBAAmB,EAAKhC,MAAMgC,sBAIpC,uBAAOrB,MAAM,uBAAuBwB,IAAI,cAAxC,iCAMN,sBACEV,GAAG,4BACHd,MAAM,iBACNyB,YAAU,WAHZ,UAKE,sBAAKzB,MAAM,iBAAX,UACE,sBAAKA,MAAM,uBAAX,UACE,cAAC,IAAD,CACEH,GAAG,SACHS,QAAS,WACP,EAAKF,MAAMG,QAAQ,8BAHvB,SAME,qBACEmB,IAAKC,EACL3B,MAAM,gBACN4B,IAAI,gCAGPpB,KAAKnB,MAAMgC,kBACV,sBAAKrB,MAAM,oDAAX,UACE,cAAC,IAAD,CACEH,GAAG,SACHS,QAAS,WACP,EAAKF,MAAMG,QAAQ,8BAHvB,SAME,oBAAIL,MAAO,CAAEC,MAAO,SAApB,yCAIF,+FAMN,sBAAKH,MAAM,gBAAX,UACE,cAAC,IAAD,CACEH,GAAG,cACHS,QAAS,WACP,EAAKF,MAAMG,QAAQ,mCAHvB,SAME,qBACEmB,IAAKG,EACL7B,MAAM,gBACN4B,IAAI,qCAGPpB,KAAKnB,MAAMgC,kBACV,sBAAKrB,MAAM,oDAAX,UACE,cAAC,IAAD,CACEH,GAAG,cACHS,QAAS,WACP,EAAKF,MAAMG,QAAQ,mCAHvB,SAME,oBAAIL,MAAO,CAAEC,MAAO,SAApB,8CAIF,gGAMN,sBAAKH,MAAM,gBAAX,UACE,cAAC,IAAD,CACEH,GAAG,sBACHS,QAAS,WACP,EAAKF,MAAMG,QAAQ,uBAHvB,SAME,qBACEmB,IAAKI,EACL9B,MAAM,gBACN4B,IAAI,yBAGPpB,KAAKnB,MAAMgC,kBACV,sBAAKrB,MAAM,oDAAX,UACE,cAAC,IAAD,CACEH,GAAG,sBACHS,QAAS,WACP,EAAKF,MAAMG,QAAQ,uBAHvB,SAME,oBAAIL,MAAO,CAAEC,MAAO,SAApB,0CAIF,uFAIN,sBAAKH,MAAM,gBAAX,UACE,cAAC,IAAD,CACEH,GAAG,mBACHS,QAAS,WACP,EAAKF,MAAMG,QAAQ,oBAHvB,SAME,qBACEmB,IAAKK,EACL/B,MAAM,gBACN4B,IAAI,qBAGPpB,KAAKnB,MAAMgC,kBACV,sBAAKrB,MAAM,oDAAX,UACE,cAAC,IAAD,CACEH,GAAG,mBACHS,QAAS,WACP,EAAKF,MAAMG,QAAQ,oBAHvB,SAME,oBAAIL,MAAO,CAAEC,MAAO,SAApB,+BAEF,sGAON,sBAAKH,MAAM,gBAAX,UACE,cAAC,IAAD,CACEH,GAAG,aACHS,QAAS,WACP,EAAKF,MAAMG,QAAQ,mBAHvB,SAME,qBACEmB,IAAKM,EACLhC,MAAM,gBACN4B,IAAI,qBAGPpB,KAAKnB,MAAMgC,kBACV,sBAAKrB,MAAM,oDAAX,UACE,cAAC,IAAD,CACEH,GAAG,cACHS,QAAS,WACP,EAAKF,MAAMG,QAAQ,mBAHvB,SAME,oBAAIL,MAAO,CAAEC,MAAO,SAApB,8BAEF,wFAIN,sBAAKH,MAAM,gBAAX,UACE,cAAC,IAAD,CACEH,GAAG,cACHS,QAAS,WACP,EAAKF,MAAMG,QAAQ,mBAHvB,SAME,qBACEmB,IAAKO,EACLjC,MAAM,gBACN4B,IAAI,qBAGPpB,KAAKnB,MAAMgC,kBACV,sBAAKrB,MAAM,oDAAX,UACE,cAAC,IAAD,CACEH,GAAG,cACHS,QAAS,WACP,EAAKF,MAAMG,QAAQ,mBAHvB,SAME,oBAAIL,MAAO,CAAEC,MAAO,SAApB,8BAEF,4FAIN,sBAAKH,MAAM,gBAAX,UACE,cAAC,IAAD,CACEH,GAAG,sBACHS,QAAS,WACP,EAAKF,MAAMG,QAAQ,uBAHvB,SAME,qBACEmB,IAAKQ,EACLlC,MAAM,gBACN4B,IAAI,yBAGPpB,KAAKnB,MAAMgC,kBACV,sBAAKrB,MAAM,oDAAX,UACE,cAAC,IAAD,CACEH,GAAG,sBACHS,QAAS,WACP,EAAKF,MAAMG,QAAQ,uBAHvB,SAME,oBAAIL,MAAO,CAAEC,MAAO,SAApB,kCAEF,0GAON,sBAAKH,MAAM,gBAAX,UACE,cAAC,IAAD,CACEH,GAAG,SACHS,QAAS,WACP,EAAKF,MAAMG,QAAQ,UAHvB,SAME,qBAAKmB,IAAKS,EAAMnC,MAAM,gBAAgB4B,IAAI,YAE3CpB,KAAKnB,MAAMgC,kBACV,sBAAKrB,MAAM,oDAAX,UACE,cAAC,IAAD,CACEH,GAAG,SACHS,QAAS,WACP,EAAKF,MAAMG,QAAQ,UAHvB,SAME,oBAAIL,MAAO,CAAEC,MAAO,SAApB,qBAEF,0GAON,sBAAKH,MAAM,gBAAX,UACE,cAAC,IAAD,CACEH,GAAG,eACHS,QAAS,WACP,EAAKF,MAAMG,QAAQ,gBAHvB,SAME,qBAAKmB,IAAKU,EAAYpC,MAAM,gBAAgB4B,IAAI,kBAEjDpB,KAAKnB,MAAMgC,kBACV,sBAAKrB,MAAM,oDAAX,UACE,cAAC,IAAD,CACEH,GAAG,eACHS,QAAS,WACP,EAAKF,MAAMG,QAAQ,gBAHvB,SAME,oBAAIL,MAAO,CAAEC,MAAO,SAApB,2BAEF,iHAQR,oBACEH,MAAM,wBACNC,KAAK,6BACLoC,KAAK,SACLC,aAAW,OAJb,UAME,sBAAMtC,MAAM,6BAA6BuC,cAAY,SACrD,sBAAMvC,MAAM,UAAZ,yBAEF,oBACEA,MAAM,wBACNC,KAAK,6BACLoC,KAAK,SACLC,aAAW,OAJb,UAME,sBAAMtC,MAAM,6BAA6BuC,cAAY,SACrD,sBAAMvC,MAAM,UAAZ,qBAEF,uBACA,uBACA,uBACA,iC,GAzTagB,aCfR,MAA0B,iCC2D1BxB,E,4MA7CbH,MAAQ,G,kEAHNmD,OAAOC,SAAS,EAAG,K,+BAKnB,OACE,eAACnB,EAAA,EAAD,WACE,uBACA,uBACA,wCACQ,sBAAMpB,MAAO,CAAEC,MAAO,WAAtB,4BAER,uBACA,uBACA,sBAAKH,MAAM,MAAX,UACE,qBAAKA,MAAM,eAAX,SACE,qBACE0B,IAAKgB,EACLd,IAAI,OACJ1B,MAAO,CAAEyC,MAAO,IAAKC,OAAQ,SAGjC,sBAAK5C,MAAM,eAAX,UACE,+BACE,sBAAME,MAAO,CAAEC,MAAO,WAAtB,yBADF,6JAMA,uBACA,6NAOJ,uBACA,uBACA,uBACA,0CACA,uBACA,cAAC,EAAD,CAAUI,QAASC,KAAKJ,MAAMG,iB,GA5CnBS,a,QC2CJ6B,E,4MA9CbxD,MAAQ,CACNyD,SAAU,EAAK1C,MAAM2C,KAAK,GAAGC,M,2DAO7B,IAHA,IAAID,EAAOvC,KAAKJ,MAAM2C,KAClBE,EAAY,GAEPC,EAAY,EAAGA,EAAYH,EAAKtC,OAAQyC,IAC/CD,EAAUrD,KACR,cAACiD,EAAD,CAEE/B,GACEiC,EAAKG,GAAWF,OAASxC,KAAKnB,MAAMyD,SAChC,mBAAmBK,OAAOJ,EAAKG,GAAWF,MAC1C,YAAYG,OAAOJ,EAAKG,GAAWF,MAEzCI,SAAUL,EAAKG,GAAWF,KAC1BK,MAAON,EAAKG,GAAWF,KARzB,SAUGD,EAAKG,GAAWF,OAASxC,KAAKnB,MAAMyD,UACnCC,EAAKG,GAAWI,WAVbP,EAAKG,GAAWF,OAc3B,OAAOC,I,+BAGC,IAAD,OACP,OACE,8BACE,cAACM,EAAA,EAAD,CACEC,iBAAkBhD,KAAKJ,MAAM2C,KAAK,GAAGC,KACrCS,UAAWjD,KAAKnB,MAAMyD,SACtB9C,MAAM,oBACN0D,SAAU,SAACC,GACT,EAAKpC,SAAS,CAAEuB,SAAUa,KAL9B,SAQGnD,KAAKoD,qB,GAxCE5C,a,iBCqCH6C,E,4MAvCbxE,MAAQ,G,6DAUN,IAHA,IAAIyE,EAAYtD,KAAKJ,MAAM2D,OACvBA,EAAS,GAEJC,EAAY,EAAGA,EAAYF,EAAUC,OAAOtD,OAAQuD,IAAa,CAExE,IAAIC,EAAMH,EAAUC,OAAOC,GACvBE,EAAWD,EAAIvD,KAChByC,OAAO,WACPA,OAAOW,EAAUT,OACjBF,OAAOc,EAAIE,OAGdJ,EAAOnE,KACL,sBACEkB,GAAIoD,EAEJlE,MAAO,+BAHT,SAKGiE,EAAIE,OAHAD,IASX,OAAOH,I,+BAIP,OAAO,8BAAMvD,KAAK4D,qB,GApCDpD,aCmBNqD,E,4MAhBbhF,MAAQ,G,uDAEN,OACE,gCACE,+BACGmB,KAAKJ,MAAMiD,MAAMF,OAAO,KAAM,IAC/B,sBAAMjD,MAAO,CAAEC,MAAO,WAAtB,SAAoCK,KAAKJ,MAAMkE,cAGjD,4BAAI9D,KAAKJ,MAAMmE,WACf,cAAC,EAAD,CAAQR,OAAQvD,KAAKJ,MAAM2D,gB,GAXX/C,aCsGTwD,E,4MA/FbnF,MAAQ,CACNsD,MAAOH,OAAOiC,WACd7B,OAAQJ,OAAOkC,YACfC,kBAAmB,EACnBC,gBAAiB,EACjBC,cAAe,U,EAiBjBC,iBAAmB,WACjB,EAAKC,eACL,EAAKxD,SAAS,CAAEoB,MAAOH,OAAOiC,aAC9B,EAAKlD,SAAS,CAAEqB,OAAQJ,OAAOkC,e,kEAfI,IAAjClE,KAAKnB,MAAMsF,mBACoB,IAA/BnE,KAAKnB,MAAMuF,iBAEXpE,KAAKsE,mBAEPtC,OAAOwC,iBAAiB,SAAUxE,KAAKsE,oB,6CAIvCtC,OAAOyC,oBAAoB,SAAUzE,KAAKsE,oB,qCAU1C,IAAII,EAAUC,SAASC,eAAe,sBAElCC,EAAWF,SAASG,KAAKC,wBACzBC,EAAWN,EAAQK,wBAEnBZ,EAAoBU,EAASI,MAAQD,EAASC,MAC9Cb,EAAkBY,EAASE,IAAML,EAASK,IAE9ClF,KAAKe,SAAS,CAAEoD,kBAAmBA,IACnCnE,KAAKe,SAAS,CAAEqD,gBAAiBA,EAAkB,O,+BAG3C,IAAD,OACP,OACE,eAACtD,EAAA,EAAD,CAAWR,GAAG,qBAAd,UACE,uBACA,uBACA,cAAC,EAAD,CACEuC,MAAO7C,KAAKJ,MAAMiD,MAClBiB,SAAU9D,KAAKJ,MAAMkE,SACrBC,SAAU/D,KAAKJ,MAAMmE,SACrBR,OAAQvD,KAAKJ,MAAM2D,SAErB,uBACA,uBACA,sBAAK/D,MAAM,sBAAX,UACE,qBAAKA,MAAM,YAAX,SACGQ,KAAKJ,MAAMuF,aACV,cAAC,IAAD,CACEC,SAAS,EACTC,QAAQ,SACRC,SAAS,QACTnD,MAAO,IACPoD,SAAU,SAACC,GACT,IAAMC,EAAOD,EAAS,SAAW,QACjC,EAAKzE,SAAS,CAAEsD,cAAeoB,SAKvC,qBAAKjG,MAAM,sBAAX,SACE,cAAC,IAAD,CACEH,GAAI,cAAcsD,OAAO3C,KAAKJ,MAAM8F,UACpC/E,OAAO,SACP+E,UAAQ,EAHV,SAKE,wBAAQxF,KAAK,SAASV,MAAM,eAA5B,6BAMN,wBACEA,MAAM,WACN0B,IAAKlB,KAAKJ,MAAM+F,UAAU3F,KAAKnB,MAAMwF,eACrCxB,MAAO7C,KAAKJ,MAAMiD,MAClBT,OAAQpC,KAAKnB,MAAMuD,OACnBD,MAAOnC,KAAKnB,MAAMsD,MAAQ,EAAInC,KAAKnB,MAAMsF,kBACzCyB,YAAY,IACZC,UAAU,gB,GAzFGrF,aCyFRsF,E,4MAzFbjH,MAAQ,CACNsD,MAAOH,OAAOiC,WACd7B,OAAQJ,OAAOkC,YACfC,kBAAmB,EACnBC,gBAAiB,G,EAqBnBE,iBAAmB,WACjB,EAAKC,eACL,EAAKxD,SAAS,CAAEoB,MAAOH,OAAOiC,aAC9B,EAAKlD,SAAS,CAAEqB,OAAQJ,OAAOkC,e,kEAfI,IAAjClE,KAAKnB,MAAMsF,mBACoB,IAA/BnE,KAAKnB,MAAMuF,iBAEXpE,KAAKsE,mBAEPtC,OAAOwC,iBAAiB,SAAUxE,KAAKsE,oB,6CAIvCtC,OAAOyC,oBAAoB,SAAUzE,KAAKsE,oB,qCAU1C,IAAII,EAAUC,SAASC,eAAe,mBAElCC,EAAWF,SAASG,KAAKC,wBACzBC,EAAWN,EAAQK,wBAEnBZ,EAAoBU,EAASI,MAAQD,EAASC,MAC9Cb,EAAkBY,EAASE,IAAML,EAASK,IAE9ClF,KAAKe,SAAS,CAAEoD,kBAAmBA,IACnCnE,KAAKe,SAAS,CAAEqD,gBAAiBA,EAAkB,O,+BAInD,OACE,eAACtD,EAAA,EAAD,CAAWR,GAAG,kBAAd,UACE,uBACA,uBACA,cAAC,EAAD,CACEuC,MAAO7C,KAAKJ,MAAMiD,MAClBiB,SAAU9D,KAAKJ,MAAMkE,SACrBC,SAAU/D,KAAKJ,MAAMmE,SACrBR,OAAQvD,KAAKJ,MAAM2D,SAErB,uBACA,uBACA,sBAAK/D,MAAM,sBAAX,UACE,qBAAKA,MAAM,cACX,qBAAKA,MAAM,sBAAX,SACE,cAAC,IAAD,CACEH,GAAI,WAAWsD,OAAO3C,KAAKJ,MAAM8F,UACjC/E,OAAO,SACP+E,UAAQ,EAHV,SAKE,wBAAQxF,KAAK,SAASV,MAAM,eAA5B,6BAMN,wBACEA,MAAM,SACN0B,IAAKlB,KAAKJ,MAAMmG,OAAOpD,OACrB,8CAEFiD,YAAY,IACZxD,OAAQJ,OAAOkC,YAAclE,KAAKnB,MAAMuF,gBACxCjC,MAAOH,OAAOiC,WAAa,EAAIjE,KAAKnB,MAAMsF,kBAC1C6B,gBAAgB,OAChBC,mBAAmB,OACnBC,sBAAsB,OACtBrD,MAAO7C,KAAKJ,MAAMiD,e,GAnFPrC,aC4FNW,E,4MAxFbtC,MAAQ,CACN0D,KAAM,CACJ,CACEC,KAAM,mBACNM,UACE,cAAC,EAAD,CACE6C,UAAW,CACTQ,MACE,4FACFC,OACE,iGAEJV,SAAS,YACTP,aAAa,EACbtC,MAAM,4BACNiB,SAAS,WACTC,SAAS,wFACTR,OAAQ,CACNV,MAAO,QACPU,OAAQ,CACN,CAAEI,MAAO,eAAgBzD,KAAM,SAC/B,CAAEyD,MAAO,SAAUzD,KAAM,YACzB,CAAEyD,MAAO,QAASzD,KAAM,iBAMlC,CACEsC,KAAM,iBACNM,UACE,cAAC,EAAD,CACE6C,UAAW,CACTQ,MACE,oFACFC,OACE,qFAEJV,SAAS,eACTP,aAAa,EACbtC,MAAM,4BACNiB,SAAS,iBACTC,SAAS,8FAETR,OAAQ,CACNV,MAAO,QACPU,OAAQ,CACN,CAAEI,MAAO,eAAgBzD,KAAM,SAC/B,CAAEyD,MAAO,SAAUzD,KAAM,YACzB,CAAEyD,MAAO,QAASzD,KAAM,iBAMlC,CACEsC,KAAM,gBACNM,UACE,cAAC,EAAD,CACED,MAAM,4BACNiB,SAAS,gBACTC,SAAS,4FACT2B,SAAS,YACTK,OAAO,kIACPxC,OAAQ,CACNV,MAAO,QACPU,OAAQ,CACN,CAAEI,MAAO,eAAgBzD,KAAM,SAC/B,CAAEyD,MAAO,SAAUzD,KAAM,YACzB,CAAEyD,MAAO,QAASzD,KAAM,mB,kEAxEpC8B,OAAOC,SAAS,EAAG,K,+BAkFnB,OACE,eAACnB,EAAA,EAAD,WACE,uBACA,cAAC,EAAD,CAAKyB,KAAMvC,KAAKnB,MAAM0D,c,GAvFV/B,aCsELa,E,4MAjEbxC,MAAQ,CACN0D,KAAM,CACJ,CACEC,KAAM,mBACNM,UACE,cAAC,EAAD,CACE6C,UAAW,CACTQ,MACE,wGACFC,OACE,0GAEJV,SAAS,iBACTP,aAAa,EACbtC,MAAM,iCACNiB,SAAS,WACTC,SAAS,qLACTR,OAAQ,CACNV,MAAO,aACPU,OAAQ,CACN,CAAEI,MAAO,oBAAqBzD,KAAM,SACpC,CAAEyD,MAAO,sBAAuBzD,KAAM,SACtC,CAAEyD,MAAO,SAAUzD,KAAM,YACzB,CAAEyD,MAAO,QAASzD,KAAM,YACxB,CAAEyD,MAAO,aAAczD,KAAM,iBAMvC,CACEsC,KAAM,SACNM,UACE,cAAC,EAAD,CACED,MAAM,iCACNiB,SAAS,SACTC,SAAS,sIACT2B,SAAS,iBACTK,OAAO,kIACPxC,OAAQ,CACNV,MAAO,aACPU,OAAQ,CACN,CAAEI,MAAO,oBAAqBzD,KAAM,SACpC,CAAEyD,MAAO,sBAAuBzD,KAAM,SACtC,CAAEyD,MAAO,SAAUzD,KAAM,YACzB,CAAEyD,MAAO,QAASzD,KAAM,YACxB,CAAEyD,MAAO,aAAczD,KAAM,mB,kEAjDzC8B,OAAOC,SAAS,EAAG,K,+BA2DnB,OACE,eAACnB,EAAA,EAAD,WACE,uBACA,cAAC,EAAD,CAAKyB,KAAMvC,KAAKnB,MAAM0D,c,GAhEL/B,aC0EVc,E,4MArEbzC,MAAQ,CACN0D,KAAM,CACJ,CACEC,KAAM,mBACNM,UACE,cAAC,EAAD,CACE6C,UAAW,CACTQ,MACE,oGACFC,OACE,sGAEJV,SAAS,yBACTP,aAAa,EACbtC,MAAM,qBACNiB,SAAS,WACTC,SAAS,4FACTR,OAAQ,CACNV,MAAO,YACPU,OAAQ,CACN,CAAEI,MAAO,qBAAsBzD,KAAM,SACrC,CAAEyD,MAAO,uBAAwBzD,KAAM,SACvC,CAAEyD,MAAO,sBAAuBzD,KAAM,SACtC,CAAEyD,MAAO,SAAUzD,KAAM,YACzB,CAAEyD,MAAO,QAASzD,KAAM,YACxB,CAAEyD,MAAO,OAAQzD,KAAM,YACvB,CAAEyD,MAAO,SAAUzD,KAAM,iBAMnC,CACEsC,KAAM,SACNM,UACE,cAAC,EAAD,CACED,MAAM,qBACNiB,SAAS,SACTC,SAAS,sGACT2B,SAAS,yBACTK,OAAO,kIACPxC,OAAQ,CACNV,MAAO,YACPU,OAAQ,CACN,CAAEI,MAAO,qBAAsBzD,KAAM,SACrC,CAAEyD,MAAO,uBAAwBzD,KAAM,SACvC,CAAEyD,MAAO,sBAAuBzD,KAAM,SACtC,CAAEyD,MAAO,SAAUzD,KAAM,YACzB,CAAEyD,MAAO,QAASzD,KAAM,YACxB,CAAEyD,MAAO,OAAQzD,KAAM,YACvB,CAAEyD,MAAO,SAAUzD,KAAM,mB,kEArDrC8B,OAAOC,SAAS,EAAG,K,+BA+DnB,OACE,eAACnB,EAAA,EAAD,WACE,uBACA,cAAC,EAAD,CAAKyB,KAAMvC,KAAKnB,MAAM0D,c,GApEN/B,aC0ETe,E,4MArEb1C,MAAQ,CACN0D,KAAM,CACJ,CACEC,KAAM,mBACNM,UACE,cAAC,EAAD,CACE6C,UAAW,CACTQ,MACE,yFACFC,OACE,2FAEJV,SAAS,sBACTP,aAAa,EACbtC,MAAM,kBACNiB,SAAS,WACTC,SAAS,kLACTR,OAAQ,CACNV,MAAO,iBACPU,OAAQ,CACN,CAAEI,MAAO,kBAAmBzD,KAAM,SAClC,CAAEyD,MAAO,yBAA0BzD,KAAM,SACzC,CAAEyD,MAAO,eAAgBzD,KAAM,SAC/B,CAAEyD,MAAO,oBAAqBzD,KAAM,SACpC,CAAEyD,MAAO,SAAUzD,KAAM,YACzB,CAAEyD,MAAO,QAASzD,KAAM,YACxB,CAAEyD,MAAO,MAAOzD,KAAM,iBAMhC,CACEsC,KAAM,SACNM,UACE,cAAC,EAAD,CACED,MAAM,kBACNiB,SAAS,SACTC,SAAS,2GACT2B,SAAS,sBACTK,OAAO,kIACPxC,OAAQ,CACNV,MAAO,iBACPU,OAAQ,CACN,CAAEI,MAAO,kBAAmBzD,KAAM,SAClC,CAAEyD,MAAO,yBAA0BzD,KAAM,SACzC,CAAEyD,MAAO,eAAgBzD,KAAM,SAC/B,CAAEyD,MAAO,oBAAqBzD,KAAM,SACpC,CAAEyD,MAAO,SAAUzD,KAAM,YACzB,CAAEyD,MAAO,QAASzD,KAAM,YACxB,CAAEyD,MAAO,MAAOzD,KAAM,mB,kEArDlC8B,OAAOC,SAAS,EAAG,K,+BA+DnB,OACE,eAACnB,EAAA,EAAD,WACE,uBACA,cAAC,EAAD,CAAKyB,KAAMvC,KAAKnB,MAAM0D,c,GApEF/B,aC2Gb6F,E,4MAtGbxH,MAAQ,CACN0D,KAAM,CACJ,CACEC,KAAM,yBACNM,UACE,cAAC,EAAD,CACE6C,UAAW,CACTQ,MACE,8GACFC,OACE,gHAEJV,SAAS,iBACTP,aAAa,EACbtC,MAAM,iBACNiB,SAAS,iBACTC,SAAS,4EACTR,OAAQ,CACNV,MAAO,YACPU,OAAQ,CACN,CAAEI,MAAO,2BAA4BzD,KAAM,SAC3C,CAAEyD,MAAO,kBAAmBzD,KAAM,SAClC,CAAEyD,MAAO,eAAgBzD,KAAM,SAC/B,CAAEyD,MAAO,SAAUzD,KAAM,YACzB,CAAEyD,MAAO,QAASzD,KAAM,YACxB,CAAEyD,MAAO,OAAQzD,KAAM,YACvB,CAAEyD,MAAO,OAAQzD,KAAM,iBAMjC,CACEsC,KAAM,yBACNM,UACE,cAAC,EAAD,CACE6C,UAAW,CACTQ,MACE,8GACFC,OACE,gHAEJV,SAAS,iBACTP,aAAa,EACbtC,MAAM,iBACNiB,SAAS,gCACTC,SAAS,sFACTR,OAAQ,CACNV,MAAO,YACPU,OAAQ,CACN,CAAEI,MAAO,2BAA4BzD,KAAM,SAC3C,CAAEyD,MAAO,kBAAmBzD,KAAM,SAClC,CAAEyD,MAAO,eAAgBzD,KAAM,SAC/B,CAAEyD,MAAO,SAAUzD,KAAM,YACzB,CAAEyD,MAAO,QAASzD,KAAM,YACxB,CAAEyD,MAAO,QAASzD,KAAM,YACxB,CAAEyD,MAAO,aAAczD,KAAM,YAC7B,CAAEyD,MAAO,OAAQzD,KAAM,YACvB,CAAEyD,MAAO,OAAQzD,KAAM,iBAMjC,CACEsC,KAAM,SACNM,UACE,cAAC,EAAD,CACED,MAAM,iBACNiB,SAAS,SACTC,SAAS,gJACT2B,SAAS,iBACTK,OAAO,kIACPxC,OAAQ,CACNV,MAAO,YACPU,OAAQ,CACN,CAAEI,MAAO,2BAA4BzD,KAAM,SAC3C,CAAEyD,MAAO,kBAAmBzD,KAAM,SAClC,CAAEyD,MAAO,eAAgBzD,KAAM,SAC/B,CAAEyD,MAAO,SAAUzD,KAAM,YACzB,CAAEyD,MAAO,QAASzD,KAAM,YACxB,CAAEyD,MAAO,QAASzD,KAAM,YACxB,CAAEyD,MAAO,aAAczD,KAAM,YAC7B,CAAEyD,MAAO,OAAQzD,KAAM,YACvB,CAAEyD,MAAO,OAAQzD,KAAM,mB,kEAvFnC8B,OAAOC,SAAS,EAAG,K,+BAgGnB,OACE,eAACnB,EAAA,EAAD,WACE,uBACA,cAAC,EAAD,CAAKyB,KAAMvC,KAAKnB,MAAM0D,c,GArGH/B,aC6GZ8F,E,4MAxGbzH,MAAQ,CACN0D,KAAM,CACJ,CACEC,KAAM,yBACNM,UACE,cAAC,EAAD,CACE6C,UAAW,CACTQ,MACE,8GACFC,OACE,gHAEJV,SAAS,iBACTP,aAAa,EACbtC,MAAM,iBACNiB,SAAS,iBACTC,SAAS,6FACTR,OAAQ,CACNV,MAAO,YACPU,OAAQ,CACN,CAAEI,MAAO,2BAA4BzD,KAAM,SAC3C,CAAEyD,MAAO,kBAAmBzD,KAAM,SAClC,CAAEyD,MAAO,eAAgBzD,KAAM,SAC/B,CAAEyD,MAAO,uBAAwBzD,KAAM,SACvC,CAAEyD,MAAO,SAAUzD,KAAM,YACzB,CAAEyD,MAAO,QAASzD,KAAM,YACxB,CAAEyD,MAAO,OAAQzD,KAAM,YACvB,CAAEyD,MAAO,OAAQzD,KAAM,iBAMjC,CACEsC,KAAM,yBACNM,UACE,cAAC,EAAD,CACE6C,UAAW,CACTQ,MACE,8GACFC,OACE,gHAEJV,SAAS,iBACTP,aAAa,EACbtC,MAAM,iBACNiB,SAAS,gCACTC,SAAS,uGACTR,OAAQ,CACNV,MAAO,YACPU,OAAQ,CACN,CAAEI,MAAO,2BAA4BzD,KAAM,SAC3C,CAAEyD,MAAO,kBAAmBzD,KAAM,SAClC,CAAEyD,MAAO,eAAgBzD,KAAM,SAC/B,CAAEyD,MAAO,uBAAwBzD,KAAM,SACvC,CAAEyD,MAAO,SAAUzD,KAAM,YACzB,CAAEyD,MAAO,QAASzD,KAAM,YACxB,CAAEyD,MAAO,QAASzD,KAAM,YACxB,CAAEyD,MAAO,aAAczD,KAAM,YAC7B,CAAEyD,MAAO,OAAQzD,KAAM,YACvB,CAAEyD,MAAO,OAAQzD,KAAM,iBAMjC,CACEsC,KAAM,SACNM,UACE,cAAC,EAAD,CACED,MAAM,iBACNiB,SAAS,SACTC,SAAS,+JACT2B,SAAS,iBACTK,OAAO,kIACPxC,OAAQ,CACNV,MAAO,YACPU,OAAQ,CACN,CAAEI,MAAO,2BAA4BzD,KAAM,SAC3C,CAAEyD,MAAO,kBAAmBzD,KAAM,SAClC,CAAEyD,MAAO,eAAgBzD,KAAM,SAC/B,CAAEyD,MAAO,SAAUzD,KAAM,YACzB,CAAEyD,MAAO,QAASzD,KAAM,YACxB,CAAEyD,MAAO,QAASzD,KAAM,YACxB,CAAEyD,MAAO,aAAczD,KAAM,YAC7B,CAAEyD,MAAO,OAAQzD,KAAM,YACvB,CAAEyD,MAAO,OAAQzD,KAAM,mB,kEAzFnC8B,OAAOC,SAAS,EAAG,K,+BAkGnB,OACE,eAACnB,EAAA,EAAD,WACE,uBACA,cAAC,EAAD,CAAKyB,KAAMvC,KAAKnB,MAAM0D,c,GAvGH/B,aCgFZ+F,E,4MA3Eb1H,MAAQ,CACN0D,KAAM,CACJ,CACEC,KAAM,mBACNM,UACE,cAAC,EAAD,CACE6C,UAAW,CACTQ,MACE,4FACFC,OACE,8FAEJV,SAAS,yBACTP,aAAa,EACbtC,MAAM,qBACNiB,SAAS,WACTC,SAAS,4IACTR,OAAQ,CACNV,MAAO,oBACPU,OAAQ,CACN,CAAEI,MAAO,qBAAsBzD,KAAM,SACrC,CAAEyD,MAAO,uBAAwBzD,KAAM,SACvC,CAAEyD,MAAO,kBAAmBzD,KAAM,SAClC,CAAEyD,MAAO,eAAgBzD,KAAM,SAC/B,CAAEyD,MAAO,SAAUzD,KAAM,YACzB,CAAEyD,MAAO,QAASzD,KAAM,YACxB,CAAEyD,MAAO,OAAQzD,KAAM,YACvB,CAAEyD,MAAO,SAAUzD,KAAM,YACzB,CAAEyD,MAAO,iBAAkBzD,KAAM,iBAO3C,CACEsC,KAAM,SACNM,UACE,cAAC,EAAD,CACED,MAAM,qBACNiB,SAAS,SACTC,SAAS,gLACT2B,SAAS,yBACTK,OAAO,kIACPxC,OAAQ,CACNV,MAAO,oBACPU,OAAQ,CACN,CAAEI,MAAO,2BAA4BzD,KAAM,SAC3C,CAAEyD,MAAO,kBAAmBzD,KAAM,SAClC,CAAEyD,MAAO,eAAgBzD,KAAM,SAC/B,CAAEyD,MAAO,uBAAwBzD,KAAM,SACvC,CAAEyD,MAAO,SAAUzD,KAAM,YACzB,CAAEyD,MAAO,QAASzD,KAAM,YACxB,CAAEyD,MAAO,QAASzD,KAAM,YACxB,CAAEyD,MAAO,aAAczD,KAAM,YAC7B,CAAEyD,MAAO,OAAQzD,KAAM,YACvB,CAAEyD,MAAO,OAAQzD,KAAM,mB,kEA3DnC8B,OAAOC,SAAS,EAAG,K,+BAqEnB,OACE,eAACnB,EAAA,EAAD,WACE,uBACA,cAAC,EAAD,CAAKyB,KAAMvC,KAAKnB,MAAM0D,c,GA1EF/B,aC0EbvB,E,4MArEbJ,MAAQ,CACN0D,KAAM,CACJ,CACEC,KAAM,mBACNM,UACE,cAAC,EAAD,CACE6C,UAAW,CACTQ,MACE,+EACFC,OACE,iFAEJV,SAAS,YACTP,aAAa,EACbtC,MAAM,QACNiB,SAAS,WACTC,SAAS,8KACTR,OAAQ,CACNV,MAAO,QACPU,OAAQ,CACN,CAAEI,MAAO,QAASzD,KAAM,SACxB,CAAEyD,MAAO,kBAAmBzD,KAAM,SAClC,CAAEyD,MAAO,YAAazD,KAAM,SAC5B,CAAEyD,MAAO,8BAA+BzD,KAAM,SAC9C,CAAEyD,MAAO,SAAUzD,KAAM,YACzB,CAAEyD,MAAO,QAASzD,KAAM,YACxB,CAAEyD,MAAO,aAAczD,KAAM,iBAMvC,CACEsC,KAAM,SACNM,UACE,cAAC,EAAD,CACED,MAAM,QACNiB,SAAS,SACTC,SAAS,sIACT2B,SAAS,YACTK,OAAO,kIACPxC,OAAQ,CACNV,MAAO,QACPU,OAAQ,CACN,CAAEI,MAAO,QAASzD,KAAM,SACxB,CAAEyD,MAAO,kBAAmBzD,KAAM,SAClC,CAAEyD,MAAO,YAAazD,KAAM,SAC5B,CAAEyD,MAAO,8BAA+BzD,KAAM,SAC9C,CAAEyD,MAAO,SAAUzD,KAAM,YACzB,CAAEyD,MAAO,QAASzD,KAAM,YACxB,CAAEyD,MAAO,aAAczD,KAAM,mB,kEArDzC8B,OAAOC,SAAS,EAAG,K,+BA+DnB,OACE,eAACnB,EAAA,EAAD,WACE,uBACA,cAAC,EAAD,CAAKyB,KAAMvC,KAAKnB,MAAM0D,c,GApEV/B,aC8ELoB,E,4MAzEb/C,MAAQ,CACN0D,KAAM,CACJ,CACEC,KAAM,mBACNM,UACE,cAAC,EAAD,CACE6C,UAAW,CACTQ,MACE,gGACFC,OACE,kGAEJV,SAAS,kBACTP,aAAa,EACbtC,MAAM,cACNiB,SAAS,WACTC,SAAS,2GACTR,OAAQ,CACNV,MAAO,aACPU,OAAQ,CACN,CAAEI,MAAO,mBAAoBzD,KAAM,SACnC,CAAEyD,MAAO,cAAezD,KAAM,SAC9B,CAAEyD,MAAO,OAAQzD,KAAM,SACvB,CAAEyD,MAAO,SAAUzD,KAAM,YACzB,CAAEyD,MAAO,QAASzD,KAAM,YACxB,CAAEyD,MAAO,OAAQzD,KAAM,YACvB,CAAEyD,MAAO,SAAUzD,KAAM,YACzB,CAAEyD,MAAO,aAAczD,KAAM,YAC7B,CAAEyD,MAAO,SAAUzD,KAAM,iBAMnC,CACEsC,KAAM,SACNM,UACE,cAAC,EAAD,CACED,MAAM,cACNiB,SAAS,SACTC,SAAS,+JACT2B,SAAS,kBACTK,OAAO,kIACPxC,OAAQ,CACNV,MAAO,aACPU,OAAQ,CACN,CAAEI,MAAO,mBAAoBzD,KAAM,SACnC,CAAEyD,MAAO,cAAezD,KAAM,SAC9B,CAAEyD,MAAO,OAAQzD,KAAM,SACvB,CAAEyD,MAAO,SAAUzD,KAAM,YACzB,CAAEyD,MAAO,QAASzD,KAAM,YACxB,CAAEyD,MAAO,OAAQzD,KAAM,YACvB,CAAEyD,MAAO,SAAUzD,KAAM,YACzB,CAAEyD,MAAO,aAAczD,KAAM,YAC7B,CAAEyD,MAAO,SAAUzD,KAAM,mB,kEAzDrC8B,OAAOC,SAAS,EAAG,K,+BAmEnB,OACE,eAACnB,EAAA,EAAD,WACE,uBACA,cAAC,EAAD,CAAKyB,KAAMvC,KAAKnB,MAAM0D,c,GAxEL/B,aCqDVgG,E,4MA3Cb3H,MAAQ,CACNgB,KAAM,Q,EAGRE,QAAU,SAACF,GACT,EAAKkB,SAAS,CAAElB,KAAMA,K,uDAGd,IAAD,OACP,OACE,eAAC,IAAD,WACE,cAAC,EAAD,CAAQA,KAAMG,KAAKnB,MAAMgB,KAAME,QAASC,KAAKD,UAC7C,eAAC,IAAD,WACE,cAAC,IAAD,CACE0G,OAAK,EACLC,KAAK,qBACLC,OAAQ,SAAC/G,GAAD,OAAW,cAAC,EAAD,2BAAUA,GAAV,IAAiBG,QAAS,EAAKA,cAEpD,cAAC,IAAD,CAAO2G,KAAK,0BAA0B5D,UAAW3B,IACjD,cAAC,IAAD,CAAOuF,KAAK,+BAA+B5D,UAAWzB,IACtD,cAAC,IAAD,CACEqF,KAAK,uCACL5D,UAAWxB,IAEb,cAAC,IAAD,CACEoF,KAAK,oCACL5D,UAAWvB,IAEb,cAAC,IAAD,CAAOmF,KAAK,+BAA+B5D,UAAWuD,IACtD,cAAC,IAAD,CAAOK,KAAK,+BAA+B5D,UAAWwD,IACtD,cAAC,IAAD,CACEI,KAAK,uCACL5D,UAAWyD,IAEb,cAAC,IAAD,CAAOG,KAAK,0BAA0B5D,UAAW7D,IACjD,cAAC,IAAD,CAAOyH,KAAK,gCAAgC5D,UAAWlB,OAEzD,cAAC,EAAD,W,GAtCUpB,aCLHoG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCCdQ,IAASV,OACP,cAAC,IAAMW,WAAP,UACE,cAAC,EAAD,MAEF3C,SAASC,eAAe,SAM1BgC,M","file":"static/js/main.410957a3.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"../styles.css\";\r\n\r\nclass Header extends Component {\r\n  state = {\r\n    pages: [\r\n      \"Home\",\r\n      \"Intro to Python and Numpy\",\r\n      \"Linear and Logistic Regression\",\r\n      \"Sentiment Analysis\",\r\n      \"Neural Networks\",\r\n      \"Chatbot Part 1\",\r\n      \"Chatbot Part 2\",\r\n      \"Text Summarization\",\r\n      \"Tries\",\r\n      \"Naive Bayes\",\r\n    ],\r\n    page_map: {\r\n      Home: \"/SIGNLL-Fall-2020/\",\r\n      \"Intro to Python and Numpy\": \"/SIGNLL-Fall-2020/intro\",\r\n      \"Linear and Logistic Regression\": \"/SIGNLL-Fall-2020/regression\",\r\n      \"Sentiment Analysis\": \"/SIGNLL-Fall-2020/sentiment_analysis\",\r\n      \"Neural Networks\": \"/SIGNLL-Fall-2020/neural_networks\",\r\n      \"Chatbot Part 1\": \"/SIGNLL-Fall-2020/chatbot_p1\",\r\n      \"Chatbot Part 2\": \"/SIGNLL-Fall-2020/chatbot_p2\",\r\n      \"Text Summarization\": \"/SIGNLL-Fall-2020/text_summarization\",\r\n      Tries: \"/SIGNLL-Fall-2020/tries\",\r\n      \"Naive Bayes\": \"/SIGNLL-Fall-2020/naive_bayes\",\r\n    },\r\n  };\r\n\r\n  /**\r\n   * Creates a list of dropdown links\r\n   */\r\n  createListItems() {\r\n    // declare our list of pages\r\n    var pages = [];\r\n\r\n    // iterate through each page\r\n    for (var page_num = 0; page_num < this.state.pages.length; page_num++) {\r\n      // grab the current page\r\n      const curr_page = this.state.pages[page_num];\r\n\r\n      // add the correct styling and links\r\n      pages.push(\r\n        <h4 key={this.state.page_map[curr_page]}>\r\n          <Link\r\n            to={this.state.page_map[curr_page]}\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#navbarToggleExternalContent\"\r\n          >\r\n            <a class=\"text-white\" href={this.state.page_map[curr_page]}>\r\n              <span\r\n                style={{\r\n                  color: this.props.page === curr_page ? \"#92AD94\" : \"white\",\r\n                }}\r\n                onClick={() => {\r\n                  this.props.setPage(curr_page);\r\n                }}\r\n              >\r\n                {curr_page}\r\n              </span>\r\n            </a>\r\n          </Link>\r\n        </h4>\r\n      );\r\n    }\r\n\r\n    // return the page\r\n    return pages;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div class=\"pos-f-t\">\r\n        <nav class=\"navbar navbar-dark bg-dark auto-ml\">\r\n          <h2 class=\"text-white\">\r\n            SIGNLL@UIUC:{\" \"}\r\n            <span style={{ color: \"#92AD94\" }}>{this.props.page}</span>\r\n          </h2>\r\n          <button\r\n            class=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#navbarToggleExternalContent\"\r\n            aria-controls=\"navbarToggleExternalContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n            id=\"navbar-button\"\r\n          >\r\n            <span class=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n        </nav>\r\n        <div class=\"collapse\" id=\"navbarToggleExternalContent\">\r\n          <div class=\"bg-dark p-4\">{this.createListItems()}</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Footer extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <div className=\"fixed-bottom\">\r\n        <nav class=\"navbar navbar-expand-md navbar-dark bg-dark\">\r\n          <div class=\"navbar-collapse collapse w-100 order-3 dual-collapse2\">\r\n            <ul class=\"navbar-nav ml-auto\">\r\n              <a\r\n                class=\"text-white\"\r\n                href=\"mailto:balepur2@illinois.edu\"\r\n                target=\"blank\"\r\n              >\r\n                Email\r\n              </a>\r\n              <a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</a>\r\n              <a\r\n                class=\"text-white\"\r\n                href=\"https://www.linkedin.com/in/nishant-balepur-a03818107/\"\r\n                target=\"blank\"\r\n              >\r\n                LinkedIn\r\n              </a>\r\n              <a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</a>\r\n              <a\r\n                class=\"text-white\"\r\n                href=\"https://github.com/nbalepur\"\r\n                target=\"blank\"\r\n              >\r\n                GitHub\r\n              </a>\r\n              <a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</a>\r\n            </ul>\r\n          </div>\r\n        </nav>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Footer;\r\n","export default __webpack_public_path__ + \"static/media/intro.b3b837b0.png\";","export default __webpack_public_path__ + \"static/media/regression.cda44bcc.png\";","export default __webpack_public_path__ + \"static/media/sentiment.80b8b8b3.png\";","export default __webpack_public_path__ + \"static/media/neuralnet.cd21719c.png\";","export default __webpack_public_path__ + \"static/media/chatbotp1.e71174cd.png\";","export default __webpack_public_path__ + \"static/media/chatbotp2.411c6df8.png\";","export default __webpack_public_path__ + \"static/media/summary.5544ac6c.png\";","export default __webpack_public_path__ + \"static/media/trie.e9523b7f.png\";","export default __webpack_public_path__ + \"static/media/naivebayes.875d495d.png\";","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport Intro from \"../images/intro.png\";\r\nimport Regression from \"../images/regression.png\";\r\nimport Sentiment from \"../images/sentiment.png\";\r\nimport NeuralNetwork from \"../images/neuralnet.png\";\r\nimport Chatbot1 from \"../images/chatbotp1.png\";\r\nimport Chatbot2 from \"../images/chatbotp2.png\";\r\nimport Summary from \"../images/summary.png\";\r\nimport Trie from \"../images/trie.png\";\r\nimport NaiveBayes from \"../images/naivebayes.png\";\r\n\r\nimport { Container } from \"react-bootstrap\";\r\n\r\nclass Projects extends Component {\r\n  state = {\r\n    showDescriptions: true,\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <div id=\"checkbox-row\" class=\"row\">\r\n          <div class=\"col-sm-10\"></div>\r\n          <div class=\"col-sm-2\">\r\n            <div class=\"custom-control custom-checkbox\">\r\n              <input\r\n                type=\"checkbox\"\r\n                class=\"custom-control-input\"\r\n                id=\"hide-labels\"\r\n                onClick={() => {\r\n                  this.setState({\r\n                    showDescriptions: !this.state.showDescriptions,\r\n                  });\r\n                }}\r\n              />\r\n              <label class=\"custom-control-label\" for=\"hide-labels\">\r\n                Hide Labels\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div\r\n          id=\"carouselExampleIndicators\"\r\n          class=\"carousel slide\"\r\n          data-ride=\"carousel\"\r\n        >\r\n          <div class=\"carousel-inner\">\r\n            <div class=\"carousel-item active\">\r\n              <Link\r\n                to=\"/intro\"\r\n                onClick={() => {\r\n                  this.props.setPage(\"Intro to Python and Numpy\");\r\n                }}\r\n              >\r\n                <img\r\n                  src={Intro}\r\n                  class=\"d-block w-100\"\r\n                  alt=\"Intro to Python and Numpy\"\r\n                />\r\n              </Link>\r\n              {this.state.showDescriptions && (\r\n                <div class=\"carousel-caption d-none d-md-block carousel-label\">\r\n                  <Link\r\n                    to=\"/intro\"\r\n                    onClick={() => {\r\n                      this.props.setPage(\"Intro to Python and Numpy\");\r\n                    }}\r\n                  >\r\n                    <h4 style={{ color: \"white\" }}>\r\n                      Intro to Python and Numpy\r\n                    </h4>\r\n                  </Link>\r\n                  <p>\r\n                    An introduction to the Python language and Numpy library\r\n                  </p>\r\n                </div>\r\n              )}\r\n            </div>\r\n            <div class=\"carousel-item\">\r\n              <Link\r\n                to=\"/regression\"\r\n                onClick={() => {\r\n                  this.props.setPage(\"Linear and Logistic Regression\");\r\n                }}\r\n              >\r\n                <img\r\n                  src={Regression}\r\n                  class=\"d-block w-100\"\r\n                  alt=\"Linear and Logistic Regression\"\r\n                />\r\n              </Link>\r\n              {this.state.showDescriptions && (\r\n                <div class=\"carousel-caption d-none d-md-block carousel-label\">\r\n                  <Link\r\n                    to=\"/regression\"\r\n                    onClick={() => {\r\n                      this.props.setPage(\"Linear and Logistic Regression\");\r\n                    }}\r\n                  >\r\n                    <h4 style={{ color: \"white\" }}>\r\n                      Linear and Logistic Regression\r\n                    </h4>\r\n                  </Link>\r\n                  <p>\r\n                    Fundamentals of linear and logistic regression algorithms\r\n                  </p>\r\n                </div>\r\n              )}\r\n            </div>\r\n            <div class=\"carousel-item\">\r\n              <Link\r\n                to=\"/sentiment_analysis\"\r\n                onClick={() => {\r\n                  this.props.setPage(\"Sentiment Analysis\");\r\n                }}\r\n              >\r\n                <img\r\n                  src={Sentiment}\r\n                  class=\"d-block w-100\"\r\n                  alt=\"Sentiment Analysis\"\r\n                />\r\n              </Link>\r\n              {this.state.showDescriptions && (\r\n                <div class=\"carousel-caption d-none d-md-block carousel-label\">\r\n                  <Link\r\n                    to=\"/sentiment_analysis\"\r\n                    onClick={() => {\r\n                      this.props.setPage(\"Sentiment Analysis\");\r\n                    }}\r\n                  >\r\n                    <h4 style={{ color: \"white\" }}>\r\n                      Twitter Sentiment Analysis\r\n                    </h4>\r\n                  </Link>\r\n                  <p>Analyzing and predicting the sentiment of tweets</p>\r\n                </div>\r\n              )}\r\n            </div>\r\n            <div class=\"carousel-item\">\r\n              <Link\r\n                to=\"/neural_networks\"\r\n                onClick={() => {\r\n                  this.props.setPage(\"Neural Networks\");\r\n                }}\r\n              >\r\n                <img\r\n                  src={NeuralNetwork}\r\n                  class=\"d-block w-100\"\r\n                  alt=\"Neural Network\"\r\n                />\r\n              </Link>\r\n              {this.state.showDescriptions && (\r\n                <div class=\"carousel-caption d-none d-md-block carousel-label\">\r\n                  <Link\r\n                    to=\"/neural_networks\"\r\n                    onClick={() => {\r\n                      this.props.setPage(\"Neural Networks\");\r\n                    }}\r\n                  >\r\n                    <h4 style={{ color: \"white\" }}>Neural Networks</h4>\r\n                  </Link>\r\n                  <p>\r\n                    Application of neural networks to handwritten digit\r\n                    recognition\r\n                  </p>\r\n                </div>\r\n              )}\r\n            </div>\r\n            <div class=\"carousel-item\">\r\n              <Link\r\n                to=\"chatbot_p1\"\r\n                onClick={() => {\r\n                  this.props.setPage(\"Chatbot Part 1\");\r\n                }}\r\n              >\r\n                <img\r\n                  src={Chatbot1}\r\n                  class=\"d-block w-100\"\r\n                  alt=\"Chatbot Part 1\"\r\n                />\r\n              </Link>\r\n              {this.state.showDescriptions && (\r\n                <div class=\"carousel-caption d-none d-md-block carousel-label\">\r\n                  <Link\r\n                    to=\"/chatbot_p1\"\r\n                    onClick={() => {\r\n                      this.props.setPage(\"Chatbot Part 1\");\r\n                    }}\r\n                  >\r\n                    <h4 style={{ color: \"white\" }}>Chatbot Part 1</h4>\r\n                  </Link>\r\n                  <p>Training the model for a customer support chatbot</p>\r\n                </div>\r\n              )}\r\n            </div>\r\n            <div class=\"carousel-item\">\r\n              <Link\r\n                to=\"/chatbot_p2\"\r\n                onClick={() => {\r\n                  this.props.setPage(\"Chatbot Part 2\");\r\n                }}\r\n              >\r\n                <img\r\n                  src={Chatbot2}\r\n                  class=\"d-block w-100\"\r\n                  alt=\"Chatbot Part 2\"\r\n                />\r\n              </Link>\r\n              {this.state.showDescriptions && (\r\n                <div class=\"carousel-caption d-none d-md-block carousel-label\">\r\n                  <Link\r\n                    to=\"/chatbot_p2\"\r\n                    onClick={() => {\r\n                      this.props.setPage(\"Chatbot Part 2\");\r\n                    }}\r\n                  >\r\n                    <h4 style={{ color: \"white\" }}>Chatbot Part 2</h4>\r\n                  </Link>\r\n                  <p>Using a pre-trained model to make chatbot predictions</p>\r\n                </div>\r\n              )}\r\n            </div>\r\n            <div class=\"carousel-item\">\r\n              <Link\r\n                to=\"/text_summarization\"\r\n                onClick={() => {\r\n                  this.props.setPage(\"Text Summarization\");\r\n                }}\r\n              >\r\n                <img\r\n                  src={Summary}\r\n                  class=\"d-block w-100\"\r\n                  alt=\"Text Summarization\"\r\n                />\r\n              </Link>\r\n              {this.state.showDescriptions && (\r\n                <div class=\"carousel-caption d-none d-md-block carousel-label\">\r\n                  <Link\r\n                    to=\"/text_summarization\"\r\n                    onClick={() => {\r\n                      this.props.setPage(\"Text Summarization\");\r\n                    }}\r\n                  >\r\n                    <h4 style={{ color: \"white\" }}>Text Summarization</h4>\r\n                  </Link>\r\n                  <p>\r\n                    Extracting the most important information from a long piece\r\n                    of text\r\n                  </p>\r\n                </div>\r\n              )}\r\n            </div>\r\n            <div class=\"carousel-item\">\r\n              <Link\r\n                to=\"/tries\"\r\n                onClick={() => {\r\n                  this.props.setPage(\"Tries\");\r\n                }}\r\n              >\r\n                <img src={Trie} class=\"d-block w-100\" alt=\"Tries\" />\r\n              </Link>\r\n              {this.state.showDescriptions && (\r\n                <div class=\"carousel-caption d-none d-md-block carousel-label\">\r\n                  <Link\r\n                    to=\"/tries\"\r\n                    onClick={() => {\r\n                      this.props.setPage(\"Tries\");\r\n                    }}\r\n                  >\r\n                    <h4 style={{ color: \"white\" }}>Tries</h4>\r\n                  </Link>\r\n                  <p>\r\n                    Application and uses of storing dictionaries in trie data\r\n                    structure\r\n                  </p>\r\n                </div>\r\n              )}\r\n            </div>\r\n            <div class=\"carousel-item\">\r\n              <Link\r\n                to=\"/naive_bayes\"\r\n                onClick={() => {\r\n                  this.props.setPage(\"Naive Bayes\");\r\n                }}\r\n              >\r\n                <img src={NaiveBayes} class=\"d-block w-100\" alt=\"Naive Bayes\" />\r\n              </Link>\r\n              {this.state.showDescriptions && (\r\n                <div class=\"carousel-caption d-none d-md-block carousel-label\">\r\n                  <Link\r\n                    to=\"/naive_bayes\"\r\n                    onClick={() => {\r\n                      this.props.setPage(\"Naive Bayes\");\r\n                    }}\r\n                  >\r\n                    <h4 style={{ color: \"white\" }}>Naive Bayes</h4>\r\n                  </Link>\r\n                  <p>\r\n                    Combining statistics and NLP to create a twitter\r\n                    de-anonymization model\r\n                  </p>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n          <a\r\n            class=\"carousel-control-prev\"\r\n            href=\"#carouselExampleIndicators\"\r\n            role=\"button\"\r\n            data-slide=\"prev\"\r\n          >\r\n            <span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\r\n            <span class=\"sr-only\">Previous</span>\r\n          </a>\r\n          <a\r\n            class=\"carousel-control-next\"\r\n            href=\"#carouselExampleIndicators\"\r\n            role=\"button\"\r\n            data-slide=\"next\"\r\n          >\r\n            <span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\r\n            <span class=\"sr-only\">Next</span>\r\n          </a>\r\n          <br></br>\r\n          <br></br>\r\n          <br></br>\r\n          <br></br>\r\n        </div>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Projects;\r\n","export default __webpack_public_path__ + \"static/media/logo.14309ca8.png\";","import React, { Component } from \"react\";\r\n\r\nimport { Container } from \"react-bootstrap\";\r\n\r\nimport Projects from \"../components/projects.js\";\r\n\r\nimport Logo from \"../images/logo.png\";\r\nimport \"../styles.css\";\r\n\r\nclass Home extends Component {\r\n  componentDidMount() {\r\n    window.scrollTo(0, 0);\r\n  }\r\n\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <br></br>\r\n        <br></br>\r\n        <h2>\r\n          About <span style={{ color: \"#2185c5\" }}>SIGNLL@UIUC</span>\r\n        </h2>\r\n        <hr></hr>\r\n        <br></br>\r\n        <div class=\"row\">\r\n          <div class=\"col col-lg-3\">\r\n            <img\r\n              src={Logo}\r\n              alt=\"logo\"\r\n              style={{ width: 250, height: 250 }}\r\n            ></img>\r\n          </div>\r\n          <div class=\"col col-lg-9\">\r\n            <h4>\r\n              <span style={{ color: \"#2185c5\" }}>SIGNLL@UIUC</span> is the\r\n              special interest group for natural language learning at the\r\n              University of Illinois at Urbana-Champaign, and is one of the many\r\n              subgroups of ACM\r\n            </h4>\r\n            <br></br>\r\n            <h4>\r\n              This website contains many of the projects that we've worked on\r\n              throughout different semesters, including notebooks, slides, and\r\n              demos to give a taste of natural language processing\r\n            </h4>\r\n          </div>\r\n        </div>\r\n        <br></br>\r\n        <br></br>\r\n        <br></br>\r\n        <h2>Projects</h2>\r\n        <hr></hr>\r\n        <Projects setPage={this.props.setPage} />\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from \"react\";\r\nimport { Tabs } from \"react-bootstrap\";\r\n\r\nimport \"../styles.css\";\r\n\r\nclass Tab extends Component {\r\n  state = {\r\n    curr_tab: this.props.tabs[0].name,\r\n  };\r\n\r\n  createTabs() {\r\n    var tabs = this.props.tabs;\r\n    var tab_items = [];\r\n\r\n    for (let tab_index = 0; tab_index < tabs.length; tab_index++) {\r\n      tab_items.push(\r\n        <Tab\r\n          key={tabs[tab_index].name}\r\n          id={\r\n            tabs[tab_index].name === this.state.curr_tab\r\n              ? \"page-tab-active-\".concat(tabs[tab_index].name)\r\n              : \"page-tab-\".concat(tabs[tab_index].name)\r\n          }\r\n          eventKey={tabs[tab_index].name}\r\n          title={tabs[tab_index].name}\r\n        >\r\n          {tabs[tab_index].name === this.state.curr_tab &&\r\n            tabs[tab_index].component}\r\n        </Tab>\r\n      );\r\n    }\r\n    return tab_items;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Tabs\r\n          defaultActiveKey={this.props.tabs[0].name}\r\n          activeKey={this.state.curr_tab}\r\n          class=\"nav nav-justified\"\r\n          onSelect={(key) => {\r\n            this.setState({ curr_tab: key });\r\n          }}\r\n        >\r\n          {this.createTabs()}\r\n        </Tabs>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Tab;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Badges extends Component {\r\n  state = {};\r\n\r\n  /**\r\n   * Create badges\r\n   */\r\n  createBadges() {\r\n    // declare objects\r\n    var badge_obj = this.props.badges;\r\n    var badges = [];\r\n\r\n    for (var badge_num = 0; badge_num < badge_obj.badges.length; badge_num++) {\r\n      // iterate through data\r\n      var obj = badge_obj.badges[badge_num];\r\n      var badge_id = obj.type\r\n        .concat(\"-badge-\")\r\n        .concat(badge_obj.title)\r\n        .concat(obj.label);\r\n\r\n      // append appropriate object\r\n      badges.push(\r\n        <span\r\n          id={badge_id}\r\n          key={badge_id}\r\n          class={\"badge badge-pill badge-light\"}\r\n        >\r\n          {obj.label}\r\n        </span>\r\n      );\r\n    }\r\n\r\n    // return value\r\n    return badges;\r\n  }\r\n\r\n  render() {\r\n    return <div>{this.createBadges()}</div>;\r\n  }\r\n}\r\n\r\nexport default Badges;\r\n","import React, { Component } from \"react\";\r\n\r\nimport Badges from \"./badges.js\";\r\n\r\nclass Subheader extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h3>\r\n          {this.props.title.concat(\":\")}{\" \"}\r\n          <span style={{ color: \"#2185c5\" }}>{this.props.titleKey}</span>\r\n        </h3>\r\n\r\n        <p>{this.props.subtitle}</p>\r\n        <Badges badges={this.props.badges} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Subheader;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { Container } from \"react-bootstrap\";\r\nimport BootstrapSwitchButton from \"bootstrap-switch-button-react\";\r\n\r\nimport Subheader from \"./subheader.js\";\r\n\r\nimport \"../styles.css\";\r\n\r\nclass Notebook extends Component {\r\n  state = {\r\n    width: window.innerWidth,\r\n    height: window.innerHeight,\r\n    horizontal_offset: 0,\r\n    vertical_offset: 0,\r\n    notebook_type: \"filled\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (\r\n      this.state.horizontal_offset === 0 &&\r\n      this.state.vertical_offset === 0\r\n    ) {\r\n      this.updateDimensions();\r\n    }\r\n    window.addEventListener(\"resize\", this.updateDimensions);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"resize\", this.updateDimensions);\r\n  }\r\n\r\n  updateDimensions = () => {\r\n    this.updateOffset();\r\n    this.setState({ width: window.innerWidth });\r\n    this.setState({ height: window.innerHeight });\r\n  };\r\n\r\n  updateOffset() {\r\n    var element = document.getElementById(\"notebook-container\");\r\n\r\n    var bodyRect = document.body.getBoundingClientRect();\r\n    var elemRect = element.getBoundingClientRect();\r\n\r\n    var horizontal_offset = bodyRect.right - elemRect.right;\r\n    var vertical_offset = elemRect.top - bodyRect.top;\r\n\r\n    this.setState({ horizontal_offset: horizontal_offset });\r\n    this.setState({ vertical_offset: vertical_offset + 25 });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container id=\"notebook-container\">\r\n        <br></br>\r\n        <br></br>\r\n        <Subheader\r\n          title={this.props.title}\r\n          titleKey={this.props.titleKey}\r\n          subtitle={this.props.subtitle}\r\n          badges={this.props.badges}\r\n        />\r\n        <br></br>\r\n        <br></br>\r\n        <div class=\"row notebook-switch\">\r\n          <div class=\"col-lg-11\">\r\n            {this.props.allowSwitch && (\r\n              <BootstrapSwitchButton\r\n                checked={true}\r\n                onlabel=\"Filled\"\r\n                offlabel=\"Blank\"\r\n                width={100}\r\n                onChange={(active) => {\r\n                  const next = active ? \"filled\" : \"blank\";\r\n                  this.setState({ notebook_type: next });\r\n                }}\r\n              />\r\n            )}\r\n          </div>\r\n          <div class=\"col-lg-1 text-right\">\r\n            <Link\r\n              to={\"/notebooks/\".concat(this.props.download)}\r\n              target=\"_blank\"\r\n              download\r\n            >\r\n              <button type=\"button\" class=\"btn btn-info\">\r\n                Download\r\n              </button>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n        <iframe\r\n          class=\"notebook\"\r\n          src={this.props.notebooks[this.state.notebook_type]}\r\n          title={this.props.title}\r\n          height={this.state.height}\r\n          width={this.state.width - 2 * this.state.horizontal_offset}\r\n          frameborder=\"0\"\r\n          scrolling=\"auto\"\r\n        ></iframe>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Notebook;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { Container } from \"react-bootstrap\";\r\n\r\nimport Subheader from \"./subheader.js\";\r\n\r\nimport \"../styles.css\";\r\n\r\nclass Slides extends Component {\r\n  state = {\r\n    width: window.innerWidth,\r\n    height: window.innerHeight,\r\n    horizontal_offset: 0,\r\n    vertical_offset: 0,\r\n  };\r\n\r\n  /**\r\n   * Sets the offset for the slides\r\n   */\r\n\r\n  componentDidMount() {\r\n    if (\r\n      this.state.horizontal_offset === 0 &&\r\n      this.state.vertical_offset === 0\r\n    ) {\r\n      this.updateDimensions();\r\n    }\r\n    window.addEventListener(\"resize\", this.updateDimensions);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"resize\", this.updateDimensions);\r\n  }\r\n\r\n  updateDimensions = () => {\r\n    this.updateOffset();\r\n    this.setState({ width: window.innerWidth });\r\n    this.setState({ height: window.innerHeight });\r\n  };\r\n\r\n  updateOffset() {\r\n    var element = document.getElementById(\"slide-container\");\r\n\r\n    var bodyRect = document.body.getBoundingClientRect();\r\n    var elemRect = element.getBoundingClientRect();\r\n\r\n    var horizontal_offset = bodyRect.right - elemRect.right;\r\n    var vertical_offset = elemRect.top - bodyRect.top;\r\n\r\n    this.setState({ horizontal_offset: horizontal_offset });\r\n    this.setState({ vertical_offset: vertical_offset + 50 });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container id=\"slide-container\">\r\n        <br></br>\r\n        <br></br>\r\n        <Subheader\r\n          title={this.props.title}\r\n          titleKey={this.props.titleKey}\r\n          subtitle={this.props.subtitle}\r\n          badges={this.props.badges}\r\n        />\r\n        <br></br>\r\n        <br></br>\r\n        <div class=\"row notebook-switch\">\r\n          <div class=\"col-lg-11\"></div>\r\n          <div class=\"col-lg-1 text-right\">\r\n            <Link\r\n              to={\"/slides/\".concat(this.props.download)}\r\n              target=\"_blank\"\r\n              download\r\n            >\r\n              <button type=\"button\" class=\"btn btn-info\">\r\n                Download\r\n              </button>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n        <iframe\r\n          class=\"slides\"\r\n          src={this.props.source.concat(\r\n            \"/embed?start=false&loop=false&delayms=3000\"\r\n          )}\r\n          frameborder=\"0\"\r\n          height={window.innerHeight - this.state.vertical_offset}\r\n          width={window.innerWidth - 2 * this.state.horizontal_offset}\r\n          allowfullscreen=\"true\"\r\n          mozallowfullscreen=\"true\"\r\n          webkitallowfullscreen=\"true\"\r\n          title={this.props.title}\r\n        ></iframe>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Slides;\r\n","import React, { Component } from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\n\r\nimport Tab from \"../components/tabs.js\";\r\n\r\nimport Notebook from \"../components/notebook.js\";\r\nimport Slides from \"../components/slides.js\";\r\n\r\nclass Intro extends Component {\r\n  componentDidMount() {\r\n    window.scrollTo(0, 0);\r\n  }\r\n\r\n  state = {\r\n    tabs: [\r\n      {\r\n        name: \"Jupyter Notebook\",\r\n        component: (\r\n          <Notebook\r\n            notebooks={{\r\n              blank:\r\n                \"https://jovian.ai/embed?url=https://jovian.ai/nishantbalepur/meeting-1-workbook-blank/v/1\",\r\n              filled:\r\n                \"https://jovian.ai/embed?url=https://jovian.ai/nishantbalepur/meeting-1-workbook-solutions/v/3\",\r\n            }}\r\n            download=\"intro.zip\"\r\n            allowSwitch={true}\r\n            title=\"Intro to Python and Numpy\"\r\n            titleKey=\"Notebook\"\r\n            subtitle=\"This notebook will give you practice with various numpy functions and data structures\"\r\n            badges={{\r\n              title: \"intro\",\r\n              badges: [\r\n                { label: \"introduction\", type: \"topic\" },\r\n                { label: \"python\", type: \"language\" },\r\n                { label: \"numpy\", type: \"language\" },\r\n              ],\r\n            }}\r\n          />\r\n        ),\r\n      },\r\n      {\r\n        name: \"Jupyter Slides\",\r\n        component: (\r\n          <Notebook\r\n            notebooks={{\r\n              blank:\r\n                \"https://jovian.ai/embed?url=https://jovian.ai/nishantbalepur/meeting-1-slides/v/1\",\r\n              filled:\r\n                \"https://jovian.ai/embed?url=https://jovian.ai/nishantbalepur/meeting-1-slides/v/1\",\r\n            }}\r\n            download=\"slides.ipynb\"\r\n            allowSwitch={false}\r\n            title=\"Intro to Python and Numpy\"\r\n            titleKey=\"Jupyter Slides\"\r\n            subtitle=\"An introduction to Python and the numpy library, which will set us up\r\n      for future projects\"\r\n            badges={{\r\n              title: \"intro\",\r\n              badges: [\r\n                { label: \"introduction\", type: \"topic\" },\r\n                { label: \"python\", type: \"language\" },\r\n                { label: \"numpy\", type: \"language\" },\r\n              ],\r\n            }}\r\n          />\r\n        ),\r\n      },\r\n      {\r\n        name: \"Google Slides\",\r\n        component: (\r\n          <Slides\r\n            title=\"Intro to Python and Numpy\"\r\n            titleKey=\"Google Slides\"\r\n            subtitle=\"This slideshow gives a brief overview of NLP and the different projects we'll be covering\"\r\n            download=\"intro.pdf\"\r\n            source=\"https://docs.google.com/presentation/d/e/2PACX-1vTC3pXsIzYjYt5FACoRFCaS6pk9zZKLZ08y2lhmtxfQ6EUfHSgX4a51vxlTfOfCU6TE13O80OTjU3Sx\"\r\n            badges={{\r\n              title: \"intro\",\r\n              badges: [\r\n                { label: \"introduction\", type: \"topic\" },\r\n                { label: \"python\", type: \"language\" },\r\n                { label: \"numpy\", type: \"language\" },\r\n              ],\r\n            }}\r\n          />\r\n        ),\r\n      },\r\n    ],\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <br></br>\r\n        <Tab tabs={this.state.tabs} />\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Intro;\r\n","import React, { Component } from \"react\";\r\n\r\nimport { Container } from \"react-bootstrap\";\r\n\r\nimport Tab from \"../components/tabs.js\";\r\nimport Notebook from \"../components/notebook.js\";\r\nimport Slides from \"../components/slides.js\";\r\n\r\nclass Regression extends Component {\r\n  componentDidMount() {\r\n    window.scrollTo(0, 0);\r\n  }\r\n\r\n  state = {\r\n    tabs: [\r\n      {\r\n        name: \"Jupyter Notebook\",\r\n        component: (\r\n          <Notebook\r\n            notebooks={{\r\n              blank:\r\n                \"https://jovian.ai/embed?url=https://jovian.ai/nishantbalepur/linear-and-logistic-regression-blank/v/1\",\r\n              filled:\r\n                \"https://jovian.ai/embed?url=https://jovian.ai/nishantbalepur/linear-and-logistic-regression-filled/v/1\",\r\n            }}\r\n            download=\"regression.zip\"\r\n            allowSwitch={true}\r\n            title=\"Linear and Logistic Regression\"\r\n            titleKey=\"Notebook\"\r\n            subtitle=\"This notebook discusses two of the most fundamental algorithms for NLP, linear and logistic regression. Afterwards, we give a quick preview of how these algorithms can be applied\"\r\n            badges={{\r\n              title: \"regression\",\r\n              badges: [\r\n                { label: \"linear regression\", type: \"topic\" },\r\n                { label: \"logistic regression\", type: \"topic\" },\r\n                { label: \"python\", type: \"language\" },\r\n                { label: \"numpy\", type: \"language\" },\r\n                { label: \"matplotlib\", type: \"language\" },\r\n              ],\r\n            }}\r\n          />\r\n        ),\r\n      },\r\n      {\r\n        name: \"Slides\",\r\n        component: (\r\n          <Slides\r\n            title=\"Linear and Logistic Regression\"\r\n            titleKey=\"Slides\"\r\n            subtitle=\"This slideshow gives an overview of the theory behind regression, as well as an explanation of data collection and model validation\"\r\n            download=\"regression.pdf\"\r\n            source=\"https://docs.google.com/presentation/d/e/2PACX-1vQA38WH3xkJWdlTRXq_CrA0wQOO8C6fRCHguEoh11oCd4X_CXLUBO4eR1tGW2ADlTLTGbT2kaiTsdM_\"\r\n            badges={{\r\n              title: \"regression\",\r\n              badges: [\r\n                { label: \"linear regression\", type: \"topic\" },\r\n                { label: \"logistic regression\", type: \"topic\" },\r\n                { label: \"python\", type: \"language\" },\r\n                { label: \"numpy\", type: \"language\" },\r\n                { label: \"matplotlib\", type: \"language\" },\r\n              ],\r\n            }}\r\n          />\r\n        ),\r\n      },\r\n    ],\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <br></br>\r\n        <Tab tabs={this.state.tabs} />\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Regression;\r\n","import React, { Component } from \"react\";\r\n\r\nimport { Container } from \"react-bootstrap\";\r\n\r\nimport Tab from \"../components/tabs.js\";\r\nimport Notebook from \"../components/notebook.js\";\r\nimport Slides from \"../components/slides.js\";\r\n\r\nclass Sentiment extends Component {\r\n  componentDidMount() {\r\n    window.scrollTo(0, 0);\r\n  }\r\n\r\n  state = {\r\n    tabs: [\r\n      {\r\n        name: \"Jupyter Notebook\",\r\n        component: (\r\n          <Notebook\r\n            notebooks={{\r\n              blank:\r\n                \"https://jovian.ai/embed?url=https://jovian.ai/nishantbalepur/twitter-sentiment-analysis-blank/v/1\",\r\n              filled:\r\n                \"https://jovian.ai/embed?url=https://jovian.ai/nishantbalepur/twitter-sentiment-analysis-filled/v/1\",\r\n            }}\r\n            download=\"sentiment_analysis.zip\"\r\n            allowSwitch={true}\r\n            title=\"Sentiment Analysis\"\r\n            titleKey=\"Notebook\"\r\n            subtitle=\"In this notebook, we'll be applying logistic regression to extract sentiments from tweets\"\r\n            badges={{\r\n              title: \"sentiment\",\r\n              badges: [\r\n                { label: \"sentiment analysis\", type: \"topic\" },\r\n                { label: \"frequency dictionary\", type: \"topic\" },\r\n                { label: \"logistic regression\", type: \"topic\" },\r\n                { label: \"python\", type: \"language\" },\r\n                { label: \"numpy\", type: \"language\" },\r\n                { label: \"nltk\", type: \"language\" },\r\n                { label: \"pandas\", type: \"language\" },\r\n              ],\r\n            }}\r\n          />\r\n        ),\r\n      },\r\n      {\r\n        name: \"Slides\",\r\n        component: (\r\n          <Slides\r\n            title=\"Sentiment Analysis\"\r\n            titleKey=\"Slides\"\r\n            subtitle=\"These slides discuss the general algorithm for sentiment analysis and how we can apply it to tweets\"\r\n            download=\"sentiment_analysis.pdf\"\r\n            source=\"https://docs.google.com/presentation/d/e/2PACX-1vTDoz7tMofsHCYh-7MUBX_48w_29k8zby9iXrwlIhZr6Nmikv52_lE3MOAiK7UrkBk9RSrPsyiiet5I\"\r\n            badges={{\r\n              title: \"sentiment\",\r\n              badges: [\r\n                { label: \"sentiment analysis\", type: \"topic\" },\r\n                { label: \"frequency dictionary\", type: \"topic\" },\r\n                { label: \"logistic regression\", type: \"topic\" },\r\n                { label: \"python\", type: \"language\" },\r\n                { label: \"numpy\", type: \"language\" },\r\n                { label: \"nltk\", type: \"language\" },\r\n                { label: \"pandas\", type: \"language\" },\r\n              ],\r\n            }}\r\n          />\r\n        ),\r\n      },\r\n    ],\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <br></br>\r\n        <Tab tabs={this.state.tabs} />\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Sentiment;\r\n","import React, { Component } from \"react\";\r\n\r\nimport { Container } from \"react-bootstrap\";\r\n\r\nimport Tab from \"../components/tabs.js\";\r\nimport Notebook from \"../components/notebook.js\";\r\nimport Slides from \"../components/slides.js\";\r\n\r\nclass NeuralNetwork extends Component {\r\n  componentDidMount() {\r\n    window.scrollTo(0, 0);\r\n  }\r\n\r\n  state = {\r\n    tabs: [\r\n      {\r\n        name: \"Jupyter Notebook\",\r\n        component: (\r\n          <Notebook\r\n            notebooks={{\r\n              blank:\r\n                \"https://jovian.ai/embed?url=https://jovian.ai/nishantbalepur/neural-networks-blank/v/1\",\r\n              filled:\r\n                \"https://jovian.ai/embed?url=https://jovian.ai/nishantbalepur/neural-networks-filled/v/1\",\r\n            }}\r\n            download=\"neural_networks.zip\"\r\n            allowSwitch={true}\r\n            title=\"Neural Networks\"\r\n            titleKey=\"Notebook\"\r\n            subtitle=\"This notebook goes over how to create a neural network from scratch using numpy. Afterwards, we use our neural network to predict truth tables and recognize handwritten digits\"\r\n            badges={{\r\n              title: \"neuralnetworks\",\r\n              badges: [\r\n                { label: \"neural networks\", type: \"topic\" },\r\n                { label: \"batch gradient descent\", type: \"topic\" },\r\n                { label: \"truth tables\", type: \"topic\" },\r\n                { label: \"image recognition\", type: \"topic\" },\r\n                { label: \"python\", type: \"language\" },\r\n                { label: \"numpy\", type: \"language\" },\r\n                { label: \"pil\", type: \"language\" },\r\n              ],\r\n            }}\r\n          />\r\n        ),\r\n      },\r\n      {\r\n        name: \"Slides\",\r\n        component: (\r\n          <Slides\r\n            title=\"Neural Networks\"\r\n            titleKey=\"Slides\"\r\n            subtitle=\"In these slides, we go over the theory behind neural networks and the principles of training and testing\"\r\n            download=\"neural_networks.pdf\"\r\n            source=\"https://docs.google.com/presentation/d/e/2PACX-1vTtSWdH6Uq46x6oBQ2ywECyvGFADwkyGHAS9F6Pntl_92tZs8s4-FvMBE-222HG_HxRNZQ2Ty9BGSZf\"\r\n            badges={{\r\n              title: \"neuralnetworks\",\r\n              badges: [\r\n                { label: \"neural networks\", type: \"topic\" },\r\n                { label: \"batch gradient descent\", type: \"topic\" },\r\n                { label: \"truth tables\", type: \"topic\" },\r\n                { label: \"image recognition\", type: \"topic\" },\r\n                { label: \"python\", type: \"language\" },\r\n                { label: \"numpy\", type: \"language\" },\r\n                { label: \"pil\", type: \"language\" },\r\n              ],\r\n            }}\r\n          />\r\n        ),\r\n      },\r\n    ],\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <br></br>\r\n        <Tab tabs={this.state.tabs} />\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NeuralNetwork;\r\n","import React, { Component } from \"react\";\r\n\r\nimport { Container } from \"react-bootstrap\";\r\n\r\nimport Tab from \"../components/tabs.js\";\r\nimport Notebook from \"../components/notebook.js\";\r\nimport Slides from \"../components/slides.js\";\r\n\r\nclass ChatbotPart1 extends Component {\r\n  componentDidMount() {\r\n    window.scrollTo(0, 0);\r\n  }\r\n\r\n  state = {\r\n    tabs: [\r\n      {\r\n        name: \"Numpy Jupyter Notebook\",\r\n        component: (\r\n          <Notebook\r\n            notebooks={{\r\n              blank:\r\n                \"https://jovian.ai/embed?url=https://jovian.ai/nishantbalepur/numpypart-1-customer-support-chatbot-blank/v/1\",\r\n              filled:\r\n                \"https://jovian.ai/embed?url=https://jovian.ai/nishantbalepur/numpypart-1-customer-support-chatbot-filled/v/1\",\r\n            }}\r\n            download=\"chatbot_p1.zip\"\r\n            allowSwitch={true}\r\n            title=\"Chatbot Part 1\"\r\n            titleKey=\"Numpy Notebook\"\r\n            subtitle=\"In this notebook, we'll train a customer support chatbot using pure Numpy\"\r\n            badges={{\r\n              title: \"chatbotp1\",\r\n              badges: [\r\n                { label: \"customer support chatbot\", type: \"topic\" },\r\n                { label: \"neural networks\", type: \"topic\" },\r\n                { label: \"bag of words\", type: \"topic\" },\r\n                { label: \"python\", type: \"language\" },\r\n                { label: \"numpy\", type: \"language\" },\r\n                { label: \"nltk\", type: \"language\" },\r\n                { label: \"json\", type: \"language\" },\r\n              ],\r\n            }}\r\n          />\r\n        ),\r\n      },\r\n      {\r\n        name: \"Keras Jupyter Notebook\",\r\n        component: (\r\n          <Notebook\r\n            notebooks={{\r\n              blank:\r\n                \"https://jovian.ai/embed?url=https://jovian.ai/nishantbalepur/keraspart-1-customer-support-chatbot-blank/v/1\",\r\n              filled:\r\n                \"https://jovian.ai/embed?url=https://jovian.ai/nishantbalepur/keraspart-1-customer-support-chatbot-filled/v/1\",\r\n            }}\r\n            download=\"chatbot_p1.zip\"\r\n            allowSwitch={true}\r\n            title=\"Chatbot Part 1\"\r\n            titleKey=\"Keras and Tensorflow Notebook\"\r\n            subtitle=\"In this notebook, we'll train a customer support chatbot using Keras and Tensorflow\"\r\n            badges={{\r\n              title: \"chatbotp1\",\r\n              badges: [\r\n                { label: \"customer support chatbot\", type: \"topic\" },\r\n                { label: \"neural networks\", type: \"topic\" },\r\n                { label: \"bag of words\", type: \"topic\" },\r\n                { label: \"python\", type: \"language\" },\r\n                { label: \"numpy\", type: \"language\" },\r\n                { label: \"keras\", type: \"language\" },\r\n                { label: \"tensorflow\", type: \"language\" },\r\n                { label: \"nltk\", type: \"language\" },\r\n                { label: \"json\", type: \"language\" },\r\n              ],\r\n            }}\r\n          />\r\n        ),\r\n      },\r\n      {\r\n        name: \"Slides\",\r\n        component: (\r\n          <Slides\r\n            title=\"Chatbot Part 1\"\r\n            titleKey=\"Slides\"\r\n            subtitle=\"These slides explain what chatbots are used for, the intuition behind how they work, and a simple algorithm we can use to accomplish our task\"\r\n            download=\"chatbot_p1.pdf\"\r\n            source=\"https://docs.google.com/presentation/d/e/2PACX-1vQGMsG6SkRXnT_TRLcdPB-_au4C3SeCWnkMLqTZooUNCPJk0BdxqP70Y5PyuaSTuXt2bngKGj6gJkuE\"\r\n            badges={{\r\n              title: \"chatbotp1\",\r\n              badges: [\r\n                { label: \"customer support chatbot\", type: \"topic\" },\r\n                { label: \"neural networks\", type: \"topic\" },\r\n                { label: \"bag of words\", type: \"topic\" },\r\n                { label: \"python\", type: \"language\" },\r\n                { label: \"numpy\", type: \"language\" },\r\n                { label: \"keras\", type: \"language\" },\r\n                { label: \"tensorflow\", type: \"language\" },\r\n                { label: \"nltk\", type: \"language\" },\r\n                { label: \"json\", type: \"language\" },\r\n              ],\r\n            }}\r\n          />\r\n        ),\r\n      },\r\n    ],\r\n  };\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <br></br>\r\n        <Tab tabs={this.state.tabs} />\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ChatbotPart1;\r\n","import React, { Component } from \"react\";\r\n\r\nimport { Container } from \"react-bootstrap\";\r\n\r\nimport Tab from \"../components/tabs.js\";\r\nimport Notebook from \"../components/notebook.js\";\r\nimport Slides from \"../components/slides.js\";\r\n\r\nclass ChatbotPart2 extends Component {\r\n  componentDidMount() {\r\n    window.scrollTo(0, 0);\r\n  }\r\n\r\n  state = {\r\n    tabs: [\r\n      {\r\n        name: \"Numpy Jupyter Notebook\",\r\n        component: (\r\n          <Notebook\r\n            notebooks={{\r\n              blank:\r\n                \"https://jovian.ai/embed?url=https://jovian.ai/nishantbalepur/numpypart-2-customer-support-chatbot-blank/v/1\",\r\n              filled:\r\n                \"https://jovian.ai/embed?url=https://jovian.ai/nishantbalepur/numpypart-2-customer-support-chatbot-filled/v/1\",\r\n            }}\r\n            download=\"chatbot_p2.zip\"\r\n            allowSwitch={true}\r\n            title=\"Chatbot Part 2\"\r\n            titleKey=\"Numpy Notebook\"\r\n            subtitle=\"In this notebook, we'll make predictions with a pre-trained chatbot model using pure Numpy\"\r\n            badges={{\r\n              title: \"chatbotp2\",\r\n              badges: [\r\n                { label: \"customer support chatbot\", type: \"topic\" },\r\n                { label: \"neural networks\", type: \"topic\" },\r\n                { label: \"bag of words\", type: \"topic\" },\r\n                { label: \"multi-classification\", type: \"topic\" },\r\n                { label: \"python\", type: \"language\" },\r\n                { label: \"numpy\", type: \"language\" },\r\n                { label: \"nltk\", type: \"language\" },\r\n                { label: \"json\", type: \"language\" },\r\n              ],\r\n            }}\r\n          />\r\n        ),\r\n      },\r\n      {\r\n        name: \"Keras Jupyter Notebook\",\r\n        component: (\r\n          <Notebook\r\n            notebooks={{\r\n              blank:\r\n                \"https://jovian.ai/embed?url=https://jovian.ai/nishantbalepur/keraspart-2-customer-support-chatbot-blank/v/1\",\r\n              filled:\r\n                \"https://jovian.ai/embed?url=https://jovian.ai/nishantbalepur/keraspart-2-customer-support-chatbot-filled/v/1\",\r\n            }}\r\n            download=\"chatbot_p2.zip\"\r\n            allowSwitch={true}\r\n            title=\"Chatbot Part 2\"\r\n            titleKey=\"Keras and Tensorflow Notebook\"\r\n            subtitle=\"In this notebook, we'll make predictions with a pre-trained chatbot model using Keras and Tensorflow\"\r\n            badges={{\r\n              title: \"chatbotp2\",\r\n              badges: [\r\n                { label: \"customer support chatbot\", type: \"topic\" },\r\n                { label: \"neural networks\", type: \"topic\" },\r\n                { label: \"bag of words\", type: \"topic\" },\r\n                { label: \"multi-classification\", type: \"topic\" },\r\n                { label: \"python\", type: \"language\" },\r\n                { label: \"numpy\", type: \"language\" },\r\n                { label: \"keras\", type: \"language\" },\r\n                { label: \"tensorflow\", type: \"language\" },\r\n                { label: \"nltk\", type: \"language\" },\r\n                { label: \"json\", type: \"language\" },\r\n              ],\r\n            }}\r\n          />\r\n        ),\r\n      },\r\n      {\r\n        name: \"Slides\",\r\n        component: (\r\n          <Slides\r\n            title=\"Chatbot Part 2\"\r\n            titleKey=\"Slides\"\r\n            subtitle=\"In these slides, we review our chatbot algorithm, learn how we can make multi-class predictions, and analyze the output layer of an activated neural network\"\r\n            download=\"chatbot_p2.pdf\"\r\n            source=\"https://docs.google.com/presentation/d/e/2PACX-1vQjAfWgUEWuQseuWeIcyAsVyV0t2eymnTV74YgWzxVDF1u58OLKDrVbrX7eq8hZGJWnmBN_99hKqZMt\"\r\n            badges={{\r\n              title: \"chatbotp1\",\r\n              badges: [\r\n                { label: \"customer support chatbot\", type: \"topic\" },\r\n                { label: \"neural networks\", type: \"topic\" },\r\n                { label: \"bag of words\", type: \"topic\" },\r\n                { label: \"python\", type: \"language\" },\r\n                { label: \"numpy\", type: \"language\" },\r\n                { label: \"keras\", type: \"language\" },\r\n                { label: \"tensorflow\", type: \"language\" },\r\n                { label: \"nltk\", type: \"language\" },\r\n                { label: \"json\", type: \"language\" },\r\n              ],\r\n            }}\r\n          />\r\n        ),\r\n      },\r\n    ],\r\n  };\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <br></br>\r\n        <Tab tabs={this.state.tabs} />\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ChatbotPart2;\r\n","import React, { Component } from \"react\";\r\n\r\nimport { Container } from \"react-bootstrap\";\r\n\r\nimport Tab from \"../components/tabs.js\";\r\nimport Notebook from \"../components/notebook.js\";\r\nimport Slides from \"../components/slides.js\";\r\n\r\nclass Summarization extends Component {\r\n  componentDidMount() {\r\n    window.scrollTo(0, 0);\r\n  }\r\n\r\n  state = {\r\n    tabs: [\r\n      {\r\n        name: \"Jupyter Notebook\",\r\n        component: (\r\n          <Notebook\r\n            notebooks={{\r\n              blank:\r\n                \"https://jovian.ai/embed?url=https://jovian.ai/nishantbalepur/text-summarization-blank/v/1\",\r\n              filled:\r\n                \"https://jovian.ai/embed?url=https://jovian.ai/nishantbalepur/text-summarization-filled/v/1\",\r\n            }}\r\n            download=\"text_summarization.zip\"\r\n            allowSwitch={true}\r\n            title=\"Text Summariaztion\"\r\n            titleKey=\"Notebook\"\r\n            subtitle=\"This notebook showcases how we can take an arbitrary Wikipedia page and pick the most representative sentences to form a coherent summary\"\r\n            badges={{\r\n              title: \"textsummarization\",\r\n              badges: [\r\n                { label: \"text summarization\", type: \"topic\" },\r\n                { label: \"frequency dictionary\", type: \"topic\" },\r\n                { label: \"word embeddings\", type: \"topic\" },\r\n                { label: \"web scraping\", type: \"topic\" },\r\n                { label: \"python\", type: \"language\" },\r\n                { label: \"numpy\", type: \"language\" },\r\n                { label: \"nltk\", type: \"language\" },\r\n                { label: \"pandas\", type: \"language\" },\r\n                { label: \"beautifulsoup4\", type: \"language\" },\r\n              ],\r\n            }}\r\n          />\r\n        ),\r\n      },\r\n\r\n      {\r\n        name: \"Slides\",\r\n        component: (\r\n          <Slides\r\n            title=\"Text Summarization\"\r\n            titleKey=\"Slides\"\r\n            subtitle=\"In these slides, we take a look at different types of summarization, a simple algorithm for summarizing text, and how to solve certain problems that arise from our algorithm\"\r\n            download=\"text_summarization.pdf\"\r\n            source=\"https://docs.google.com/presentation/d/e/2PACX-1vT_Oz4B-43abgnJJoMGv6svXd54LUs-VT_KSF5VPRUMblI1zkJYLtR7nsl7fVCyp1dtA_Z1iHELSdVZ\"\r\n            badges={{\r\n              title: \"textsummarization\",\r\n              badges: [\r\n                { label: \"customer support chatbot\", type: \"topic\" },\r\n                { label: \"neural networks\", type: \"topic\" },\r\n                { label: \"bag of words\", type: \"topic\" },\r\n                { label: \"multi-classification\", type: \"topic\" },\r\n                { label: \"python\", type: \"language\" },\r\n                { label: \"numpy\", type: \"language\" },\r\n                { label: \"keras\", type: \"language\" },\r\n                { label: \"tensorflow\", type: \"language\" },\r\n                { label: \"nltk\", type: \"language\" },\r\n                { label: \"json\", type: \"language\" },\r\n              ],\r\n            }}\r\n          />\r\n        ),\r\n      },\r\n    ],\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <br></br>\r\n        <Tab tabs={this.state.tabs} />\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Summarization;\r\n","import React, { Component } from \"react\";\r\n\r\nimport { Container } from \"react-bootstrap\";\r\n\r\nimport Tab from \"../components/tabs.js\";\r\nimport Notebook from \"../components/notebook.js\";\r\nimport Slides from \"../components/slides.js\";\r\n\r\nclass Tries extends Component {\r\n  componentDidMount() {\r\n    window.scrollTo(0, 0);\r\n  }\r\n\r\n  state = {\r\n    tabs: [\r\n      {\r\n        name: \"Jupyter Notebook\",\r\n        component: (\r\n          <Notebook\r\n            notebooks={{\r\n              blank:\r\n                \"https://jovian.ai/embed?url=https://jovian.ai/nishantbalepur/tries-blank/v/1\",\r\n              filled:\r\n                \"https://jovian.ai/embed?url=https://jovian.ai/nishantbalepur/tries-filled/v/1\",\r\n            }}\r\n            download=\"tries.zip\"\r\n            allowSwitch={true}\r\n            title=\"Tries\"\r\n            titleKey=\"Notebook\"\r\n            subtitle=\"In this notebook, we analyze the efficiency of different data structures for storing a large amount of text, as well as some useful applications of the Trie data structure\"\r\n            badges={{\r\n              title: \"tries\",\r\n              badges: [\r\n                { label: \"tries\", type: \"topic\" },\r\n                { label: \"data structures\", type: \"topic\" },\r\n                { label: \"recursion\", type: \"topic\" },\r\n                { label: \"object-oriented programming\", type: \"topic\" },\r\n                { label: \"python\", type: \"language\" },\r\n                { label: \"numpy\", type: \"language\" },\r\n                { label: \"matplotlib\", type: \"language\" },\r\n              ],\r\n            }}\r\n          />\r\n        ),\r\n      },\r\n      {\r\n        name: \"Slides\",\r\n        component: (\r\n          <Slides\r\n            title=\"Tries\"\r\n            titleKey=\"Slides\"\r\n            subtitle=\"These slides discuss the theory behind Tries, its benefits and drawbacks, and applications where the data structure would be useful\"\r\n            download=\"tries.pdf\"\r\n            source=\"https://docs.google.com/presentation/d/e/2PACX-1vTafd3uHGTcvhpCJDIf2lQUVz7epSjdkuX1rAV06HTGj3NiTiaHZonXC6CJHojKV9vYL355jR2R2q80\"\r\n            badges={{\r\n              title: \"tries\",\r\n              badges: [\r\n                { label: \"tries\", type: \"topic\" },\r\n                { label: \"data structures\", type: \"topic\" },\r\n                { label: \"recursion\", type: \"topic\" },\r\n                { label: \"object-oriented programming\", type: \"topic\" },\r\n                { label: \"python\", type: \"language\" },\r\n                { label: \"numpy\", type: \"language\" },\r\n                { label: \"matplotlib\", type: \"language\" },\r\n              ],\r\n            }}\r\n          />\r\n        ),\r\n      },\r\n    ],\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <br></br>\r\n        <Tab tabs={this.state.tabs} />\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Tries;\r\n","import React, { Component } from \"react\";\r\n\r\nimport { Container } from \"react-bootstrap\";\r\n\r\nimport Tab from \"../components/tabs.js\";\r\nimport Notebook from \"../components/notebook.js\";\r\nimport Slides from \"../components/slides.js\";\r\n\r\nclass NaiveBayes extends Component {\r\n  componentDidMount() {\r\n    window.scrollTo(0, 0);\r\n  }\r\n\r\n  state = {\r\n    tabs: [\r\n      {\r\n        name: \"Jupyter Notebook\",\r\n        component: (\r\n          <Notebook\r\n            notebooks={{\r\n              blank:\r\n                \"https://jovian.ai/embed?url=https://jovian.ai/nishantbalepur/naive-bayes-classifier-blank/v/1\",\r\n              filled:\r\n                \"https://jovian.ai/embed?url=https://jovian.ai/nishantbalepur/naive-bayes-classifier-filled/v/1\",\r\n            }}\r\n            download=\"naive_bayes.zip\"\r\n            allowSwitch={true}\r\n            title=\"Naive Bayes\"\r\n            titleKey=\"Notebook\"\r\n            subtitle=\"In this notebook, we'll combine statistics and NLP to create a light-weight model to de-anonymize tweets\"\r\n            badges={{\r\n              title: \"naivebayes\",\r\n              badges: [\r\n                { label: \"de-anonymization\", type: \"topic\" },\r\n                { label: \"naive bayes\", type: \"topic\" },\r\n                { label: \"APIs\", type: \"topic\" },\r\n                { label: \"python\", type: \"language\" },\r\n                { label: \"numpy\", type: \"language\" },\r\n                { label: \"nltk\", type: \"language\" },\r\n                { label: \"tweepy\", type: \"language\" },\r\n                { label: \"matplotlib\", type: \"language\" },\r\n                { label: \"pandas\", type: \"language\" },\r\n              ],\r\n            }}\r\n          />\r\n        ),\r\n      },\r\n      {\r\n        name: \"Slides\",\r\n        component: (\r\n          <Slides\r\n            title=\"Naive Bayes\"\r\n            titleKey=\"Slides\"\r\n            subtitle=\"In this presentation, we give an introduction to probability, statistics and bayes theorem, and then apply what we learned to the de-anonymization of tweets\"\r\n            download=\"naive_bayes.pdf\"\r\n            source=\"https://docs.google.com/presentation/d/e/2PACX-1vRFhGziJwPYxgqO_fNE2qwYtZe48R5ulsor7gxrOSrdyQIxHmtascTG6GhdVfrdwAMK9VM71P1OlREJ\"\r\n            badges={{\r\n              title: \"naivebayes\",\r\n              badges: [\r\n                { label: \"de-anonymization\", type: \"topic\" },\r\n                { label: \"naive bayes\", type: \"topic\" },\r\n                { label: \"APIs\", type: \"topic\" },\r\n                { label: \"python\", type: \"language\" },\r\n                { label: \"numpy\", type: \"language\" },\r\n                { label: \"nltk\", type: \"language\" },\r\n                { label: \"tweepy\", type: \"language\" },\r\n                { label: \"matplotlib\", type: \"language\" },\r\n                { label: \"pandas\", type: \"language\" },\r\n              ],\r\n            }}\r\n          />\r\n        ),\r\n      },\r\n    ],\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <br></br>\r\n        <Tab tabs={this.state.tabs} />\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NaiveBayes;\r\n","import React, { Component } from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\n\nimport Header from \"./components/header.js\";\nimport Footer from \"./components/footer.js\";\n\nimport Home from \"./pages/home.js\";\nimport Intro from \"./pages/intro.js\";\nimport Regression from \"./pages/regression.js\";\nimport Sentiment from \"./pages/sentiment.js\";\nimport NeuralNetwork from \"./pages/neural_network.js\";\nimport ChatbotPart1 from \"./pages/chatbot_p1.js\";\nimport ChatbotPart2 from \"./pages/chatbot_p2.js\";\nimport Summarization from \"./pages/summarization.js\";\nimport Tries from \"./pages/tries.js\";\nimport NaiveBayes from \"./pages/naive_bayes.js\";\n\nclass App extends Component {\n  state = {\n    page: \"Home\",\n  };\n\n  setPage = (page) => {\n    this.setState({ page: page });\n  };\n\n  render() {\n    return (\n      <BrowserRouter>\n        <Header page={this.state.page} setPage={this.setPage} />\n        <Switch>\n          <Route\n            exact\n            path=\"/SIGNLL-Fall-2020/\"\n            render={(props) => <Home {...props} setPage={this.setPage} />}\n          />\n          <Route path=\"/SIGNLL-Fall-2020/intro\" component={Intro} />\n          <Route path=\"/SIGNLL-Fall-2020/regression\" component={Regression} />\n          <Route\n            path=\"/SIGNLL-Fall-2020/sentiment_analysis\"\n            component={Sentiment}\n          />\n          <Route\n            path=\"/SIGNLL-Fall-2020/neural_networks\"\n            component={NeuralNetwork}\n          />\n          <Route path=\"/SIGNLL-Fall-2020/chatbot_p1\" component={ChatbotPart1} />\n          <Route path=\"/SIGNLL-Fall-2020/chatbot_p2\" component={ChatbotPart2} />\n          <Route\n            path=\"/SIGNLL-Fall-2020/text_summarization\"\n            component={Summarization}\n          />\n          <Route path=\"/SIGNLL-Fall-2020/tries\" component={Tries} />\n          <Route path=\"/SIGNLL-Fall-2020/naive_bayes\" component={NaiveBayes} />\n        </Switch>\n        <Footer />\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}